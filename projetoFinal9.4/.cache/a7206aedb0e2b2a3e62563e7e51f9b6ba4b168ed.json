{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/thaysrodrigues/Desktop/projetoFinal9.1/imports/ui/sapso.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/thaysrodrigues/Desktop/projetoFinal9.1/imports/ui/sapso.vue","filename":"/Users/thaysrodrigues/Desktop/projetoFinal9.1/imports/ui/sapso.vue","passPerPreset":false,"envName":"development","cwd":"/Users/thaysrodrigues/Desktop/projetoFinal9.1","root":"/Users/thaysrodrigues/Desktop/projetoFinal9.1","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/thaysrodrigues/Desktop/projetoFinal9.1/imports/ui/sapso.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/thaysrodrigues/Desktop/projetoFinal9.1/imports/ui/sapso.vue"}},"code":"var sphere, ackley, alpine, ellipsoid, griewank, levi, rastrigin, rosenbrock;\nmodule.link(\"../../lib/sapso/multdim/multidim_functions.js\", {\n  sphere: function (v) {\n    sphere = v;\n  },\n  ackley: function (v) {\n    ackley = v;\n  },\n  alpine: function (v) {\n    alpine = v;\n  },\n  ellipsoid: function (v) {\n    ellipsoid = v;\n  },\n  griewank: function (v) {\n    griewank = v;\n  },\n  levi: function (v) {\n    levi = v;\n  },\n  rastrigin: function (v) {\n    rastrigin = v;\n  },\n  rosenbrock: function (v) {\n    rosenbrock = v;\n  }\n}, 0);\nvar debi, himmelblau, impossible, levi13, schaffer2, schaffer4, schwefel, vincent;\nmodule.link(\"../../lib/sapso/twodim/twodim_functions.js\", {\n  debi: function (v) {\n    debi = v;\n  },\n  himmelblau: function (v) {\n    himmelblau = v;\n  },\n  impossible: function (v) {\n    impossible = v;\n  },\n  levi13: function (v) {\n    levi13 = v;\n  },\n  schaffer2: function (v) {\n    schaffer2 = v;\n  },\n  schaffer4: function (v) {\n    schaffer4 = v;\n  },\n  schwefel: function (v) {\n    schwefel = v;\n  },\n  vincent: function (v) {\n    vincent = v;\n  }\n}, 1);\nvar MyFunctions;\nmodule.link(\"../../lib/mainSapso.js\", {\n  MyFunctions: function (v) {\n    MyFunctions = v;\n  }\n}, 2);\nvar getBestGlobal, getDiversity, getGradient, getRow, getVelocity, init, iniFitness, initGrad, initialization, truncGrad, truncSpace, truncVel, updateBest, updateDir, updateImportance;\nmodule.link(\"../../lib/functions.js\", {\n  getBestGlobal: function (v) {\n    getBestGlobal = v;\n  },\n  getDiversity: function (v) {\n    getDiversity = v;\n  },\n  getGradient: function (v) {\n    getGradient = v;\n  },\n  getRow: function (v) {\n    getRow = v;\n  },\n  getVelocity: function (v) {\n    getVelocity = v;\n  },\n  init: function (v) {\n    init = v;\n  },\n  iniFitness: function (v) {\n    iniFitness = v;\n  },\n  initGrad: function (v) {\n    initGrad = v;\n  },\n  initialization: function (v) {\n    initialization = v;\n  },\n  truncGrad: function (v) {\n    truncGrad = v;\n  },\n  truncSpace: function (v) {\n    truncSpace = v;\n  },\n  truncVel: function (v) {\n    truncVel = v;\n  },\n  updateBest: function (v) {\n    updateBest = v;\n  },\n  updateDir: function (v) {\n    updateDir = v;\n  },\n  updateImportance: function (v) {\n    updateImportance = v;\n  }\n}, 3);\nvar math;\nmodule.link(\"mathjs\", {\n  \"default\": function (v) {\n    math = v;\n  }\n}, 4);\nmodule.exportDefault({\n  data: function () {\n    return {\n      range: ['', ''],\n      number: '',\n      number2: '',\n      graph: '',\n      dim: '',\n      npart: '',\n      maxiter: '',\n      evalMax: '',\n      checkedNames: [],\n      number3: '',\n      selected: '',\n      itemText: '',\n      th: '',\n      text: 'sampleText',\n      loading: false,\n      csv: [{\n        DIM: 'Tom',\n        NPART: '23',\n        MAXITER: '222'\n      }, {\n        DIM: 'Sam',\n        NPART: '36',\n        MAXITER: '222'\n      }, {\n        DIM: 'Ann',\n        NPART: '18',\n        MAXITER: '222'\n      }]\n    };\n  },\n  methods: {\n    downloadCSV: function () {\n      var csv = \"\\uFEFF\" + 'DIM,NPART,MAXITER\\n';\n      this.csv.forEach(function (el) {\n        var line = el['DIM'] + ',' + el['NPART'] + ',' + el['MAXITER'] + '\\n';\n        csv += line;\n      });\n      var blob = new Blob([csv], {\n        \"type\": \"csv/plain\"\n      });\n      var link = document.createElement('a');\n      link.href = window.URL.createObjectURL(blob);\n      link.download = 'sampleCsv.csv';\n      link.click();\n    },\n    ligaGrafico: function () {\n      // Get the checkbox\n      var checkBox = document.getElementById(\"myCheck\"); // If the checkbox is checked, display the output text\n\n      if (checkBox.checked == true) {\n        this.grafico = 1;\n      } else {\n        this.grafico = 0;\n      }\n    },\n    onChange: function (event, th) {\n      evento = event.target.value;\n\n      switch (evento) {\n        case 'Sphere':\n          this.th = sphere;\n          console.log(this.th);\n          break;\n\n        case 'Levi':\n          this.th = levi;\n          console.log(this.th);\n          break;\n\n        case 'Ackley':\n          this.th = ackley;\n          console.log(this.th);\n          break;\n\n        case 'Alpine':\n          this.th = alpine;\n          console.log(this.th);\n          break;\n\n        case 'Ellipsoid':\n          this.th = ellipsoid;\n          console.log(this.th);\n          break;\n\n        case 'Griewank':\n          this.th = griewank;\n          console.log(this.th);\n          break;\n\n        case 'Rastrigin':\n          this.th = rastrigin;\n          console.log(this.th);\n          break;\n\n        case 'Rosenbrock':\n          this.th = rosenbrock;\n          console.log(this.th);\n          break;\n\n        case 'Debi':\n          this.th = debi;\n          console.log(this.th);\n          break;\n\n        case 'Himmelblau':\n          this.th = himmelblau;\n          console.log(this.th);\n          break;\n\n        case 'Impossible':\n          this.th = impossible;\n          console.log(this.th);\n          break;\n\n        case 'Levi13':\n          this.th = levi13;\n          console.log(this.th);\n          break;\n\n        case 'Schaffer2':\n          this.th = schaffer2;\n          console.log(this.th);\n          break;\n\n        case 'Schaffer4':\n          this.th = schaffer4;\n          console.log(this.th);\n          break;\n\n        case 'Schwefel':\n          this.th = schwefel;\n          console.log(this.th);\n          break;\n\n        default:\n          window.alert(\"Selecione uma funcao valida!\");\n          console.log(\"Selecione uma função válida!\");\n      }\n    },\n    send: function () {\n      console.log(this.checkedNames.toString());\n    },\n    testa: function (dim, npart, maxiter, evalMax, th, range) {\n      Plotly.purge(graph);\n      Plotly.purge(myDiv);\n      Plotly.purge(myDiv1);\n      var gra = this.grafico;\n      var DIM = this.dim; // number of dimensions\n\n      var f = this.th;\n      console.log('Função F TESTA: ', f); // name of the test function\n\n      console.log('Funcao TESTA: ', f);\n      var RANGE = this.range; //let RANGE = [-47.5 , 47.5]                                       // search domain\n      //////////// Parâmetros PSO /////////////\n\n      var NPART = this.npart; // number of particles\n\n      var MAXITER = this.maxiter; // max number of iterations\n\n      var STOPC = 0.0000000001; // stop criterion\n\n      var k1 = 1;\n      var CMAX = this.evalMax; //consecutive evaluations\n\n      var DT = [0.1, 0.25]; //dlow and dhigh\n\n      var dir = 1; //attraction as default\n\n      var cont = 0;\n      var IWMIN = 0.4; //inertia weight\n\n      var IWMAX = 0.7; //inertia weight\n\n      var params = {\n        'IW': IWMAX,\n        'CC': 0,\n        'SC': 4,\n        'GC': 0.1\n      };\n      var L = math.norm(math.multiply(math.ones(DIM)._data, RANGE[1] - RANGE[0])); // diagonal length of the space\n\n      var VMAX = k1 * (RANGE[1] - RANGE[0]) / 2; // maximum velocity\n\n      var iw = [];\n\n      for (var i = 0; i < MAXITER; i++) {\n        iw[i] = IWMAX - (i + 1) * (IWMAX - IWMIN) / MAXITER;\n      } // inertia weight through iterations\n      ///////////////Main iteration/////////////////\n\n\n      var p = init(NPART, DIM, RANGE, VMAX, f);\n      var G1 = getBestGlobal(p);\n      var c = 0;\n      var fits1 = []; // variável para guardar médias dos 5 melhores XFITS\n\n      var fits2 = [];\n      var fits3 = [];\n      var fits4 = [];\n      var fits5 = [];\n      var media1 = []; // variável para guardar a média de todos no XFIT\n\n      var media2 = [];\n      var media3 = [];\n      var media4 = [];\n      var media5 = [];\n      var ifits1 = []; // variável para guardar médias dos 5 piores XFITS\n\n      var ifits2 = [];\n      var ifits3 = [];\n      var ifits4 = [];\n      var ifits5 = [];\n      var produtos = [{\n        codigo: '01',\n        nome: 'Pastilha freio uno',\n        descricao: 'Serve até ano 2000'\n      }, {\n        codigo: '02',\n        nome: 'Pastilha freio gol',\n        descricao: 'Server para 1ª 2ª e 3ª geração'\n      }];\n      var csv = 'codigo, nome, descricao\\n';\n      produtos.forEach(function (row) {\n        csv += row.codigo;\n        csv += ',' + row.nome;\n        csv += ',' + row.descricao;\n        csv += '\\n';\n      });\n      var jsonData = encodeURIComponent('{\"is_valid\": true}'); //this.myUrl = `data:text/plain;charset=utf-8,${jsonData}`\n\n      this.myUrl = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n      this.myFilename = 'example.csv';\n      var repet = 0;\n\n      if (gra == 1) {\n        repet = 5;\n      } else {\n        repet = 1;\n      }\n\n      for (var t = 0; t < repet; t++) {\n        if (gra == 0) {\n          var trace1 = {\n            x: math.zeros(NPART)._data,\n            y: math.zeros(NPART)._data,\n            mode: 'markers',\n            type: 'scatter'\n          };\n          var data = [trace1];\n          var layout = {\n            title: 'Andamento dos dados'\n          };\n          Plotly.newPlot('graph', data, layout);\n        }\n\n        for (var i1 = 0; i1 < MAXITER; i1++) {\n          for (var j = 0; j < NPART; j++) {\n            for (var k = 0; k < DIM; k++) {\n              p.G[j][k] = getGradient(p.X[j], f)[k];\n            }\n\n            for (var _k = 0; _k < DIM; _k++) {\n              p.G[j][_k] = truncGrad(p.G[j], VMAX)[_k]; // trunc gradient                         \n            }\n\n            for (var _k2 = 0; _k2 < DIM; _k2++) {\n              p.V[j][_k2] = getVelocity(p.X[j], p.V[j], p.P[j], p.G[j], G1, p.I[j], params, dir, DIM)[_k2];\n            }\n\n            for (var _k3 = 0; _k3 < DIM; _k3++) {\n              p.V[j][_k3] = truncVel(p.V[j], VMAX)[_k3]; // trunc velocity\n            }\n\n            p.X[j] = math.add(p.X[j], p.V[j]); //trolotinho                  \n\n            var trunc = truncSpace(p.X[j], p.I[j], p.C[j], RANGE); // I e C são matrizes, mas dependendo de truncspace eles se                          //tornam numeros\n\n            trunc1 = trunc[0];\n            p.I[j] = trunc[1];\n            p.C[j] = trunc[2];\n\n            for (var _k4 = 0; _k4 < DIM; _k4++) {\n              p.X[j][_k4] = trunc1[_k4];\n            }\n\n            p.XFIT[j] = sphere(p.X[j]);\n            var update = updateBest(p.X[j], p.XFIT[j], p.P[j], p.PFIT[j], G1);\n            p.PFIT[j] = update[1];\n            G1 = update[2];\n\n            for (var _k5 = 0; _k5 < DIM; _k5++) {\n              p.P[j][_k5] = update[0][_k5];\n            }\n          }\n\n          cont = cont + 1;\n          console.log(cont);\n          var update1 = updateImportance(p.X, p.I, p.XFIT, p.OLDXFIT, p.C, p.G, G1.X1, CMAX, NPART);\n          p.I = update1[0];\n          p.C = update1[1]; // escolha de partícula \n\n          var diversity = getDiversity(p.X, L, NPART, DIM);\n          var updateDir1 = updateDir(dir, diversity, p.I, DT, NPART);\n          dir = updateDir1[0];\n          p.I = updateDir1[1];\n\n          for (var _k6 = 0; _k6 < NPART; _k6++) {\n            p.OLDXFIT[_k6] = p.XFIT[_k6]; // igualando OLDXFIT com XFIT\n          }\n\n          params.IW = iw[i1]; //console.log('ITER: ', num2str[i], ' | G: ', num2str[G.XFIT], ' | dir: ', num2str[dir], ' | Div: ', num2str[diversity])\n\n          if (gra == 0) {\n            var pontosx = math.zeros(NPART)._data;\n\n            var pontosy = math.zeros(NPART)._data;\n\n            for (var j2 = 0; j2 < NPART; j2++) {\n              pontosx[j2] = p.X[j2][0];\n              pontosy[j2] = p.X[j2][1];\n            }\n\n            Plotly.animate('graph', {\n              data: [{\n                x: pontosx,\n                y: pontosy\n              }],\n              traces: [0],\n              layout: {}\n            }, {\n              transition: {\n                duration: 500,\n                easing: 'cubic-in-out'\n              },\n              frame: {\n                duration: 500\n              }\n            });\n          } //SEPARANDO 5 MELHORES XFITS e A MÉDIA DE TODOS\n\n\n          var auxXFIT = p.XFIT; // p.XFIT original; p.X1 não funciona; \n\n          math.sort(auxXFIT);\n          var len = auxXFIT.length;\n\n          if (gra == 1) {\n            if (t == 0) {\n              fits1.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              ifits1.push((auxXFIT[len - 5] + auxXFIT[len - 1] + auxXFIT[len - 2] + auxXFIT[len - 3] + auxXFIT[len - 4]) / 5);\n              media1.push(math.mean(auxXFIT));\n            }\n\n            if (t == 1) {\n              fits2.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              ifits2.push((auxXFIT[len - 5] + auxXFIT[len - 1] + auxXFIT[len - 2] + auxXFIT[len - 3] + auxXFIT[len - 4]) / 5);\n              media2.push(math.mean(auxXFIT));\n            }\n\n            if (t == 2) {\n              fits3.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              ifits3.push((auxXFIT[len - 5] + auxXFIT[len - 1] + auxXFIT[len - 2] + auxXFIT[len - 3] + auxXFIT[len - 4]) / 5);\n              media3.push(math.mean(auxXFIT));\n            }\n\n            if (t == 3) {\n              fits4.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              ifits4.push((auxXFIT[len - 5] + auxXFIT[len - 1] + auxXFIT[len - 2] + auxXFIT[len - 3] + auxXFIT[len - 4]) / 5);\n              media4.push(math.mean(auxXFIT));\n            }\n\n            if (t == 4) {\n              fits5.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              ifits5.push((auxXFIT[len - 5] + auxXFIT[len - 1] + auxXFIT[len - 2] + auxXFIT[len - 3] + auxXFIT[len - 4]) / 5);\n              media5.push(math.mean(auxXFIT));\n            }\n          }\n\n          if (G1.XFIT < STOPC) break;\n        }\n\n        document.getElementById('resultadoSapsoX').innerHTML = JSON.stringify(G1.X1);\n        document.getElementById('resultadoSapsoXFIT').innerHTML = JSON.stringify(G1.XFIT);\n      } // Definindo maior fits\n\n\n      var vfits = [fits1.length, fits2.length, fits3.length, fits4.length, fits5.length];\n      var maiorfits = math.max(vfits); //Preenchendo fits com o último valor.\n\n      var ultimovalor1 = fits1[fits1.length - 1];\n      var ultimovalorM1 = media1[media1.length - 1];\n      var iultimovalor1 = ifits1[ifits1.length - 1];\n      var limite1 = maiorfits - fits1.length;\n\n      for (var b = 0; b < limite1; b++) {\n        fits1.push(ultimovalor1);\n        ifits1.push(iultimovalor1);\n        media1.push(ultimovalorM1);\n      }\n\n      var ultimovalor2 = fits2[fits2.length - 1];\n      var ultimovalorM2 = media2[media2.length - 1];\n      var iultimovalor2 = ifits2[ifits2.length - 1];\n      var limite2 = maiorfits - fits2.length;\n\n      for (var b = 0; b < limite2; b++) {\n        fits2.push(ultimovalor2);\n        ifits2.push(iultimovalor2);\n        media2.push(ultimovalorM2);\n      }\n\n      var ultimovalor3 = fits3[fits3.length - 1];\n      var ultimovalorM3 = media3[media3.length - 1];\n      var iultimovalor3 = ifits3[fits3.length - 1];\n      var limite3 = maiorfits - fits3.length;\n\n      for (var b = 0; b < limite3; b++) {\n        fits3.push(ultimovalor3);\n        ifits3.push(iultimovalor3);\n        media3.push(ultimovalorM3);\n      }\n\n      var ultimovalor4 = fits4[fits4.length - 1];\n      var ultimovalorM4 = media4[media4.length - 1];\n      var iultimovalor4 = ifits4[fits4.length - 1];\n      var limite4 = maiorfits - fits4.length;\n\n      for (var b = 0; b < limite4; b++) {\n        fits4.push(ultimovalor4);\n        ifits4.push(iultimovalor4);\n        media4.push(ultimovalorM4);\n      }\n\n      var ultimovalor5 = fits5[fits5.length - 1];\n      var ultimovalorM5 = media5[media5.length - 1];\n      var iultimovalor5 = ifits5[fits5.length - 1];\n      var limite5 = maiorfits - fits5.length;\n\n      for (var b = 0; b < limite5; b++) {\n        fits5.push(ultimovalor5);\n        ifits5.push(iultimovalor5);\n        media5.push(ultimovalorM5);\n      } // Gráfico XFITS Melhores, piores e média    \n\n\n      if (gra == 1) {\n        var indices = [];\n        var indices2 = [];\n        var fits = []; // variável XFITS Melhores\n\n        for (var b = 0; b < maiorfits; b++) {\n          fits.push(1 / ((fits1[b] + fits2[b] + fits3[b] + fits4[b] + fits5[b]) / 5));\n        }\n\n        var medias = []; // variável das Médias \n\n        for (var b = 0; b < maiorfits; b++) {\n          medias.push(1 / ((media1[b] + media2[b] + media3[b] + media4[b] + media5[b]) / 5));\n        }\n\n        var ifits = []; // variável XFITS Piores\n\n        for (var b = 0; b < maiorfits; b++) {\n          ifits.push(1 / ((ifits1[b] + ifits2[b] + ifits3[b] + ifits4[b] + ifits5[b]) / 5));\n        }\n\n        for (var b = 0; b < fits.length; b++) {\n          indices.push(b);\n        }\n\n        indices2 = indices;\n\n        for (var b = 0; b < fits.length; b++) {\n          indices2.push(fits.length - b - 1);\n        }\n\n        var desvmed = math.std(medias); // definindo desvio padrão\n\n        var difup = []; // diferença entre médias e desvios padrões para cima\n\n        for (var b = 0; b < maiorfits; b++) {\n          difup.push(medias[b] + desvmed);\n        }\n\n        var difdown = []; // diferença entre médias e desvios padrões para baixo\n\n        for (var b = 0; b < maiorfits; b++) {\n          difdown.push(medias[b] - desvmed);\n        }\n\n        var diftotal = []; // junção das diferenças up e down\n\n        for (var b = 0; b < maiorfits; b++) {\n          difup.push(difdown[difdown.length - b]);\n        }\n\n        diftotal = difup;\n        var trace1 = {\n          //grafico maiores valores\n          x: indices,\n          y: fits,\n          name: \"Maiores Valores\",\n          mode: 'scatter'\n        };\n        var trace2 = {\n          // grafico medias\n          x: indices,\n          y: medias,\n          name: \"Médias\",\n          mode: 'scatter'\n        };\n        var trace3 = {\n          // grafico menores valores\n          x: indices,\n          y: ifits,\n          name: \"Menores Valores\",\n          mode: 'scatter'\n        };\n        var trace4 = {\n          // grafico desvio padrao\n          x: indices2,\n          y: diftotal,\n          fill: \"tozerox\",\n          fillcolor: \"rgba(0,100,80,0.2)\",\n          line: {\n            color: \"transparent\"\n          },\n          name: \"Desvio Padrão\",\n          showlegend: true,\n          type: \"scatter\"\n        };\n        var data2 = [trace1, trace2, trace3];\n        var data3 = [trace2, trace4];\n        var layout = {\n          title: 'Maiores, Média e Menores (5 execuções)'\n        };\n        var layout2 = {\n          title: 'Média com Desvio Padrão'\n        };\n        Plotly.newPlot('myDiv', data2, layout);\n        Plotly.newPlot('myDiv1', data3, layout2);\n        console.log(\"XFIT\", p.XFIT); //teste grafico de variáveis\n\n        var indicesx = [];\n\n        for (var b = 0; b < p.XFIT.length; b++) {\n          indicesx.push(b);\n        }\n\n        var XFITinv = [];\n\n        for (var b = 0; b < p.XFIT.length; b++) {\n          XFITinv.push(1 / p.XFIT[b]);\n        }\n\n        console.log(\"indice\", indicesx);\n        var trace5 = {\n          //grafico teste valores\n          x: indicesx,\n          y: p.XFIT,\n          name: \"Teste\",\n          mode: 'scatter'\n        };\n        var data4 = [trace5];\n        var layout3 = {\n          title: 'Teste variáveis'\n        }; //Plotly.newPlot('myDiv2', data4, layout3);\t\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/thaysrodrigues/Desktop/projetoFinal9.1/imports/ui/sapso.vue"],"names":["sphere","ackley","alpine","ellipsoid","griewank","levi","rastrigin","rosenbrock","module","link","v","debi","himmelblau","impossible","levi13","schaffer2","schaffer4","schwefel","vincent","MyFunctions","getBestGlobal","getDiversity","getGradient","getRow","getVelocity","init","iniFitness","initGrad","initialization","truncGrad","truncSpace","truncVel","updateBest","updateDir","updateImportance","math","exportDefault","data","range","number","number2","graph","dim","npart","maxiter","evalMax","checkedNames","number3","selected","itemText","th","text","loading","csv","DIM","NPART","MAXITER","methods","downloadCSV","forEach","el","line","blob","Blob","document","createElement","href","window","URL","createObjectURL","download","click","ligaGrafico","checkBox","getElementById","checked","grafico","onChange","event","evento","target","value","console","log","alert","send","toString","testa","Plotly","purge","myDiv","myDiv1","gra","f","RANGE","STOPC","k1","CMAX","DT","dir","cont","IWMIN","IWMAX","params","L","norm","multiply","ones","_data","VMAX","iw","i","p","G1","c","fits1","fits2","fits3","fits4","fits5","media1","media2","media3","media4","media5","ifits1","ifits2","ifits3","ifits4","ifits5","produtos","codigo","nome","descricao","row","jsonData","encodeURIComponent","myUrl","encodeURI","myFilename","repet","t","trace1","x","zeros","y","mode","type","layout","title","newPlot","i1","j","k","G","X","V","P","I","add","trunc","C","trunc1","XFIT","update","PFIT","update1","OLDXFIT","X1","diversity","updateDir1","IW","pontosx","pontosy","j2","animate","traces","transition","duration","easing","frame","auxXFIT","sort","len","length","push","mean","innerHTML","JSON","stringify","vfits","maiorfits","max","ultimovalor1","ultimovalorM1","iultimovalor1","limite1","b","ultimovalor2","ultimovalorM2","iultimovalor2","limite2","ultimovalor3","ultimovalorM3","iultimovalor3","limite3","ultimovalor4","ultimovalorM4","iultimovalor4","limite4","ultimovalor5","ultimovalorM5","iultimovalor5","limite5","indices","indices2","fits","medias","ifits","desvmed","std","difup","difdown","diftotal","name","trace2","trace3","trace4","fill","fillcolor","color","showlegend","data2","data3","layout2","indicesx","XFITinv","trace5","data4","layout3"],"mappings":"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","sourcesContent":["\nimport {sphere, ackley, alpine, ellipsoid, griewank, levi, rastrigin, rosenbrock} from \"../../lib/sapso/multdim/multidim_functions.js\";\nimport {debi, himmelblau, impossible, levi13, schaffer2, schaffer4, schwefel, vincent} from \"../../lib/sapso/twodim/twodim_functions.js\";\nimport { MyFunctions } from \"../../lib/mainSapso.js\";\nimport {getBestGlobal , getDiversity, getGradient, getRow, getVelocity, init, iniFitness, initGrad, initialization, truncGrad, truncSpace, truncVel, updateBest, updateDir, updateImportance} from \"../../lib/functions.js\";\nimport  math from \"mathjs\";\n\n\texport default {\n\tdata() {\n\t\treturn {\n\t\t\trange: ['',''],\n\t\t\tnumber: '',\n\t\t\tnumber2: '',\n\t\t\tgraph: '',\n\t\t\tdim: '',\n\t\t\tnpart: '',\n\t\t\tmaxiter: '',\n\t\t\tevalMax: '',\n\t\t\tcheckedNames: [],\n\t\t\tnumber3: '',\n\t\t\tselected: '',\n\t\t\titemText: '',\n\t\t\tth: '',\n\t\t\ttext : 'sampleText',\n\t\t\tloading: false,\n    \t\tcsv: [\n      \t\t\t{ DIM: 'Tom', NPART: '23', MAXITER: '222' },\n      \t\t\t{ DIM: 'Sam', NPART: '36', MAXITER: '222' },\n      \t\t\t{ DIM: 'Ann', NPART: '18', MAXITER: '222' }\n    \t\t]\n\n\n\t\t}\n\t},\t\n\n\t\tmethods: {\n\t\t\t\n\t\t\tdownloadCSV: function(){\n      \t\t\tlet csv = '\\ufeff' + 'DIM,NPART,MAXITER\\n'\n      \t\t\tthis.csv.forEach(el => {\n        \t\tvar line = el['DIM'] + ',' + el['NPART'] + ',' + el['MAXITER'] + '\\n'\n        \t\tcsv += line\n      \t\t\t})\n      \t\t\tvar blob = new Blob([ csv ], { \"type\" : \"csv/plain\" });\n      \t\t\tlet link = document.createElement('a')\n      \t\t\tlink.href = window.URL.createObjectURL(blob)\n      \t\t\tlink.download = 'sampleCsv.csv'\n      \t\t\tlink.click()\n    \t\t},\n\n\t\t\tligaGrafico: function(){\n              // Get the checkbox\n              var checkBox = document.getElementById(\"myCheck\");                          \n\n              // If the checkbox is checked, display the output text\n              if (checkBox.checked == true){\n                this.grafico = 1;\n              } else {\n                this.grafico = 0;\n              }\n        },\n\t\t\tonChange: function(event,th) {\n\t\t\t\tevento = event.target.value\n\n\t\t\t\tswitch (evento) {\n\t            \tcase 'Sphere':\n\t            \tthis.th = sphere;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Levi':\n\t            \tthis.th = levi;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Ackley':\n\t            \tthis.th = ackley;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Alpine':\n\t            \tthis.th = alpine;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Ellipsoid':\n\t            \tthis.th = ellipsoid;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Griewank':\n\t            \tthis.th = griewank;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Rastrigin':\n\t            \tthis.th = rastrigin;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Rosenbrock':\n\t            \tthis.th = rosenbrock;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Debi':\n\t            \tthis.th = debi;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Himmelblau':\n\t            \tthis.th = himmelblau;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Impossible':\n\t            \tthis.th = impossible;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Levi13':\n\t            \tthis.th = levi13;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Schaffer2':\n\t            \tthis.th = schaffer2;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Schaffer4':\n\t            \tthis.th = schaffer4;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \tcase 'Schwefel':\n\t            \tthis.th = schwefel;\n\t            \tconsole.log(this.th);\n\t            \tbreak;\n\n\t            \t\n\t            default:\n\t            \twindow.alert(\"Selecione uma funcao valida!\");\n\t            \tconsole.log(\"Selecione uma função válida!\");\n\t            }        \n\t\t\t},\n\n\t\t\tsend() {\n      \t\t\tconsole.log(this.checkedNames.toString());\n    \t\t},\n\n\t\ttesta: function(dim,npart, maxiter, evalMax, th, range){\n\n\t\t\t\tPlotly.purge(graph);\n        \t\tPlotly.purge(myDiv); \n        \t\tPlotly.purge(myDiv1);    \n             \n        \t\tlet gra = this.grafico\n\n                let DIM = this.dim   \t\t\t\t\t\t\t\t\t\t// number of dimensions\n                \n\t            var f = this.th;\n\t            console.log('Função F TESTA: ', f)                 \t\t\t\t\t\t// name of the test function\n\n\t            console.log('Funcao TESTA: ', f)\n\n\t            let RANGE = this.range\n\t            //let RANGE = [-47.5 , 47.5]                                       // search domain\n\t    \n\t            //////////// Parâmetros PSO /////////////\n\t             \n\t            let NPART = this.npart                                                   // number of particles\n\t            let MAXITER = this.maxiter                                           // max number of iterations\n\t            let STOPC = 0.0000000001                                         // stop criterion\n\t            let k1 = 1\n\t            let CMAX = this.evalMax                                         //consecutive evaluations\n\t            let DT = [0.1 , 0.25 ]                                           //dlow and dhigh\n\t            let dir = 1                                                      //attraction as default\n\n\t            let cont = 0 \n\t            let IWMIN = 0.4 //inertia weight\n\t            let IWMAX = 0.7 //inertia weight\n\t            let params = {\n\t\t            'IW': IWMAX,       \n\t\t            'CC': 0, \n\t\t            'SC': 4,      \n\t\t            'GC': 0.1       \n\t            }\n\t            let L = math.norm(math.multiply(math.ones(DIM)._data, (RANGE[1] - RANGE[0])))               // diagonal length of the space\n\t            let VMAX = k1 * (RANGE[1] - RANGE[0]) / 2                                              // maximum velocity\n\t             \n\t            let iw = []\n\t            for(let i = 0; i< MAXITER; i++){\n\t               iw[i] = IWMAX - (i+1) * (IWMAX - IWMIN) / MAXITER\n\t            }                                                                                 // inertia weight through iterations\n\t             \n\t            ///////////////Main iteration/////////////////\n\t            let p = init(NPART, DIM, RANGE, VMAX, f)\n\t            let G1 = getBestGlobal(p);\n\n\t            let c = 0\n\n                let fits1 = []  // variável para guardar médias dos 5 melhores XFITS\n        let fits2 = []\n        let fits3 = []\n        let fits4 = []\n        let fits5 = []\n\n        let media1 = [] // variável para guardar a média de todos no XFIT\n        let media2 = [] \n        let media3 = [] \n        let media4 = []\n        let media5 = []\n\n        let ifits1 = []  // variável para guardar médias dos 5 piores XFITS\n        let ifits2 = []\n        let ifits3 = []\n        let ifits4 = []\n        let ifits5 = []\n    \n        var produtos = [\n        { codigo: '01',\n        nome: 'Pastilha freio uno',\n        descricao: 'Serve até ano 2000'\n        },\n        { codigo: '02',\n        nome: 'Pastilha freio gol',\n        descricao: 'Server para 1ª 2ª e 3ª geração'\n        }];\n\n        var csv = 'codigo, nome, descricao\\n';\n\n        produtos.forEach(function(row) {\n         csv += row.codigo;\n         csv += ','+ row.nome;\n         csv += ','+ row.descricao;\n         csv += '\\n';\n        });      \n\n        const jsonData = encodeURIComponent('{\"is_valid\": true}')\n        //this.myUrl = `data:text/plain;charset=utf-8,${jsonData}`\n        this.myUrl = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n        this.myFilename = 'example.csv'\n\n        let repet = 0\n            if (gra == 1){\n                repet = 5\n            }else{\n                repet = 1\n            }\n                for(let t = 0;t < repet; t++ ){                    \n\n                    if(gra == 0){\n                        var trace1 = {\n                              x: math.zeros(NPART)._data,\n                              y: math.zeros(NPART)._data,\n                              mode: 'markers',\n                              type: 'scatter'\n                            };\n\n                        var data = [trace1];                       \n\n                        var layout = {\n                            title: 'Andamento dos dados'\n                        }\n                        Plotly.newPlot('graph', data, layout)                             \n                    }\n                    \n                    for (let i1 = 0; i1 < MAXITER; i1++){\n           \n                       for (let j = 0; j < NPART; j++){               \n\t                     \n\t                       for(let k = 0; k < DIM; k++){\n\t\t                       p.G[j][k] = getGradient(p.X[j], f)[k]\n\t\t                     }\n\t                       \n\t                       for (let k = 0; k < DIM; k++){          \n\t\t                       p.G[j][k] = truncGrad(p.G[j], VMAX)[k]  // trunc gradient                         \n\t                       }   \n\t                      \n\t                       for (let k = 0; k < DIM; k++){         \n\t\t                       p.V[j][k] = getVelocity(p.X[j], p.V[j], p.P[j], p.G[j], G1, p.I[j], params, dir, DIM)[k]         \n\t                       }         \n\t                    \n\t                       for (let k = 0; k < DIM; k++){\n\t\t                       p.V[j][k] = truncVel(p.V[j], VMAX)[k] // trunc velocity\n\t                       }     \n\t\t                     \n\t                       p.X[j] = math.add(p.X[j] , p.V[j])    //trolotinho                  \n\t                       \n\n                    let trunc = truncSpace(p.X[j],p.I[j],p.C[j],RANGE)   // I e C são matrizes, mas dependendo de truncspace eles se                          //tornam numeros\n                      trunc1 = trunc[0]\n                      p.I[j] = trunc[1]                  \n                      p.C[j] = trunc[2]\n                      for (let k = 0; k < DIM; k++){\n\t\t                     p.X[j][k] = trunc1[k]\n\t                       }    \n\t                      \n                     p.XFIT[j] = sphere(p.X[j])\n\n\n                     let update = updateBest(p.X[j], p.XFIT[j], p.P[j], p.PFIT[j], G1)   \n                     p.PFIT[j] = update[1]\n                     G1 = update[2]\n                     \n                     for (let k = 0; k < DIM; k++){         \n\t\t                       p.P[j][k] = update[0][k]\n\t\t                    }\n\n                      }\n                    cont=cont +1 \n                    console.log(cont)\n                    let update1 = updateImportance(p.X, p.I, p.XFIT, p.OLDXFIT, p.C, p.G, G1.X1, CMAX, NPART)\n                    p.I = update1[0]\n                    p.C = update1[1]\n                    // escolha de partícula \n                     \n                    let diversity = getDiversity(p.X, L, NPART, DIM)\n                     \n                    let updateDir1 =  updateDir(dir, diversity, p.I, DT, NPART)\n                    dir = updateDir1[0]\n                    p.I = updateDir1[1]\n\n                    for (let k = 0; k < NPART; k++){\n\t\t                       p.OLDXFIT[k] = p.XFIT[k] // igualando OLDXFIT com XFIT\n\t                       }\n                     \n                    params.IW = iw[i1] \n                     \n                    //console.log('ITER: ', num2str[i], ' | G: ', num2str[G.XFIT], ' | dir: ', num2str[dir], ' | Div: ', num2str[diversity])\n                    \n                    if(gra == 0){          \n                      let pontosx = math.zeros(NPART)._data\n                      let pontosy = math.zeros(NPART)._data\n                      \n                      for(var j2 = 0; j2 < NPART; j2++){\n                       pontosx[j2] = p.X[j2][0]\n                       pontosy[j2] = p.X[j2][1]               \n                      }\n                      \n                          \n                          Plotly.animate('graph', {                          \n                            data: [{x: pontosx, \n                                    y: pontosy}],\n                            traces: [0],\n                            layout: {}\n                          }, {\n                            transition: {\n                              duration: 500,\n                              easing: 'cubic-in-out'\n                            },\n                            frame: {\n                              duration: 500\n                            }\n                          })\n                          \n                    }                  \n                    //SEPARANDO 5 MELHORES XFITS e A MÉDIA DE TODOS\n                    let auxXFIT = p.XFIT // p.XFIT original; p.X1 não funciona; \n                    math.sort(auxXFIT)\n                    let len = auxXFIT.length\n                    \n                    if(gra == 1){\n                        if(t == 0){\n                            fits1.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)\n                            ifits1.push((auxXFIT[len-5] + auxXFIT[len-1] + auxXFIT[len-2] + auxXFIT[len-3] + auxXFIT[len-4])/5)\n                            media1.push(math.mean(auxXFIT))\n                        }\n                        if(t == 1){\n                            fits2.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)\n                            ifits2.push((auxXFIT[len-5] + auxXFIT[len-1] + auxXFIT[len-2] + auxXFIT[len-3] + auxXFIT[len-4])/5)\n                            media2.push(math.mean(auxXFIT))\n                        }\n                        if(t == 2){\n                            fits3.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)\n                            ifits3.push((auxXFIT[len-5] + auxXFIT[len-1] + auxXFIT[len-2] + auxXFIT[len-3] + auxXFIT[len-4])/5)\n                            media3.push(math.mean(auxXFIT))\n                        }\n                        if(t == 3){\n                            fits4.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)\n                            ifits4.push((auxXFIT[len-5] + auxXFIT[len-1] + auxXFIT[len-2] + auxXFIT[len-3] + auxXFIT[len-4])/5)\n                            media4.push(math.mean(auxXFIT))\n                        }\n                        if(t == 4){\n                            fits5.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)\n                            ifits5.push((auxXFIT[len-5] + auxXFIT[len-1] + auxXFIT[len-2] + auxXFIT[len-3] + auxXFIT[len-4])/5)\n                            media5.push(math.mean(auxXFIT))\n                        }\n                    }\n                    \n                    if(G1.XFIT < STOPC)break                            \n                    } \n                document.getElementById('resultadoSapsoX').innerHTML = JSON.stringify(G1.X1);\n\t\t        document.getElementById('resultadoSapsoXFIT').innerHTML = JSON.stringify(G1.XFIT);   \n                                            \n                }                   \n                // Definindo maior fits\n                let vfits = [fits1.length,fits2.length,fits3.length,fits4.length,fits5.length]                    \n                let maiorfits = math.max(vfits)                 \n                //Preenchendo fits com o último valor.\n                \n                let ultimovalor1 = fits1[fits1.length -1]\n                let ultimovalorM1 = media1[media1.length -1]\n                let iultimovalor1 = ifits1[ifits1.length -1] \n                let limite1 = maiorfits - fits1.length \n                for(var b = 0; b < limite1; b++){\n                    fits1.push(ultimovalor1)\n                    ifits1.push(iultimovalor1)\n                    media1.push(ultimovalorM1)\n                }\n            \n                let ultimovalor2 = fits2[fits2.length -1]\n                let ultimovalorM2 = media2[media2.length -1]\n                let iultimovalor2 = ifits2[ifits2.length -1]\n                let limite2 = maiorfits - fits2.length\n                for(var b = 0; b < limite2; b++){\n                    fits2.push(ultimovalor2)\n                    ifits2.push(iultimovalor2)\n                    media2.push(ultimovalorM2)\n                }\n\n                let ultimovalor3 = fits3[fits3.length -1]\n                let ultimovalorM3 = media3[media3.length -1]\n                let iultimovalor3 = ifits3[fits3.length -1]\n                let limite3 = maiorfits - fits3.length\n                for(var b = 0; b < limite3; b++){\n                    fits3.push(ultimovalor3)\n                    ifits3.push(iultimovalor3)\n                    media3.push(ultimovalorM3)\n                }\n\n                let ultimovalor4 = fits4[fits4.length -1]\n                let ultimovalorM4 = media4[media4.length -1]\n                let iultimovalor4 = ifits4[fits4.length -1]\n                let limite4 = maiorfits - fits4.length\n                for(var b = 0; b < limite4; b++){\n                    fits4.push(ultimovalor4)\n                    ifits4.push(iultimovalor4)\n                    media4.push(ultimovalorM4)\n                }\n\n                let ultimovalor5 = fits5[fits5.length -1]\n                let ultimovalorM5 = media5[media5.length -1]\n                let iultimovalor5 = ifits5[fits5.length -1]\n                let limite5 = maiorfits - fits5.length\n                for(var b = 0; b < limite5; b++){\n                    fits5.push(ultimovalor5)\n                    ifits5.push(iultimovalor5)\n                    media5.push(ultimovalorM5)\n                }               \n              \n                // Gráfico XFITS Melhores, piores e média    \n                if(gra == 1){\n                    let indices = [] \n                    let indices2 = []                      \n                    let fits = [] // variável XFITS Melhores\n                    for(var b = 0; b < maiorfits; b++){  \n                        fits.push(1/((fits1[b] + fits2[b] + fits3[b] + fits4[b]+ fits5[b])/5))\n                    }\n\n                    let medias = [] // variável das Médias \n                    for(var b = 0; b < maiorfits; b++){\n                        medias.push(1/((media1[b] + media2[b] + media3[b] + media4[b]+ media5[b])/5))\n                    }\n                \n                    let ifits = [] // variável XFITS Piores\n                    for(var b = 0; b < maiorfits; b++){  \n                        ifits.push(1/((ifits1[b] + ifits2[b] + ifits3[b] + ifits4[b]+ ifits5[b])/5))\n                    }\n\n                    for(var b = 0; b < fits.length; b++){\n                        indices.push(b)\n                    }\n                    indices2 = indices\n                    for(var b = 0; b < fits.length; b++){\n                        indices2.push(fits.length-b-1)\n                    }                                    \n                                                                               \n                    let desvmed = math.std(medias) // definindo desvio padrão\n                    \n                    let difup = [] // diferença entre médias e desvios padrões para cima\n                    for(var b = 0; b < maiorfits; b++){  \n                        difup.push(medias[b] + desvmed)\n                    }\n\n                    let difdown = [] // diferença entre médias e desvios padrões para baixo\n                    for(var b = 0; b < maiorfits; b++){  \n                        difdown.push(medias[b] - desvmed)\n                    }                         \n\n                    let diftotal = [] // junção das diferenças up e down\n                    for(var b = 0; b < maiorfits; b++){  \n                        difup.push(difdown[difdown.length - b])\n                    }  \n                    diftotal = difup                                                         \n                    var trace1 = { //grafico maiores valores\n                      x: indices, \n                      y: fits, \n                      name: \"Maiores Valores\",\n                      mode: 'scatter'\n                    };\n\n                    var trace2 = { // grafico medias\n                      x: indices, \n                      y: medias,\n                      name: \"Médias\",\n                      mode: 'scatter'\n                    };\n\n                    var trace3 = { // grafico menores valores\n                      x: indices, \n                      y: ifits,\n                      name: \"Menores Valores\",  \n                      mode: 'scatter'\n                    };\n                    \n                    var trace4 = { // grafico desvio padrao\n                      x: indices2, \n                      y: diftotal, \n                      fill: \"tozerox\", \n                      fillcolor: \"rgba(0,100,80,0.2)\", \n                      line: {color: \"transparent\"}, \n                      name: \"Desvio Padrão\", \n                      showlegend: true, \n                      type: \"scatter\"\n                    };\n                                            \n                    var data2 = [ trace1, trace2, trace3 ];\n                    var data3 = [trace2, trace4 ];\n                    \n                    var layout = {\n                      title:'Maiores, Média e Menores (5 execuções)'\n                    };\n                    \n                    var layout2 = {\n                      title:'Média com Desvio Padrão'\n                    };                        \n\n                    Plotly.newPlot('myDiv', data2, layout);\n                    Plotly.newPlot('myDiv1', data3, layout2);\n                    console.log(\"XFIT\", p.XFIT)                 \n                    //teste grafico de variáveis\n                    let indicesx = [];\n\n                    for(var b = 0; b < p.XFIT.length; b++){\n                        indicesx.push(b)\n                    }\n                    let XFITinv = [];\n                    for(var b = 0; b < p.XFIT.length; b++){\n                        XFITinv.push(1/p.XFIT[b])\n                    }                    \n                    console.log(\"indice\",indicesx)\n                    var trace5 = { //grafico teste valores\n                      x: indicesx, \n                      y: p.XFIT, \n                      name: \"Teste\",\n                      mode: 'scatter'\n                    };                    \n                    \n                    var data4 = [trace5];\n\n                    var layout3 = {\n                       title:'Teste variáveis'\n                    };\n                     \n                    //Plotly.newPlot('myDiv2', data4, layout3);\t\n                  \t\t                                                                                            \n\t\t    }                      \n\t    }        \n    }      \n\n                \n    };\n\n"]},"sourceType":"module","hash":"a7206aedb0e2b2a3e62563e7e51f9b6ba4b168ed"}
