{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/thaysrodrigues/Desktop/projetoFinal9/node_modules/vue-csv-import/demo/components/VueCsvImport.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/thaysrodrigues/Desktop/projetoFinal9/node_modules/vue-csv-import/demo/components/VueCsvImport.vue","filename":"/Users/thaysrodrigues/Desktop/projetoFinal9/node_modules/vue-csv-import/demo/components/VueCsvImport.vue","passPerPreset":false,"envName":"development","cwd":"/Users/thaysrodrigues/Desktop/projetoFinal9","root":"/Users/thaysrodrigues/Desktop/projetoFinal9","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/thaysrodrigues/Desktop/projetoFinal9/node_modules/vue-csv-import/demo/components/VueCsvImport.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/thaysrodrigues/Desktop/projetoFinal9/node_modules/vue-csv-import/demo/components/VueCsvImport.vue"}},"code":"var _;\n\nmodule.link(\"lodash\", {\n  \"default\": function (v) {\n    _ = v;\n  }\n}, 0);\nvar axios;\nmodule.link(\"axios\", {\n  \"default\": function (v) {\n    axios = v;\n  }\n}, 1);\nvar Papa;\nmodule.link(\"papaparse\", {\n  \"default\": function (v) {\n    Papa = v;\n  }\n}, 2);\nmodule.exportDefault({\n  props: {\n    value: Array,\n    url: {\n      type: String\n    },\n    mapFields: {\n      required: true\n    },\n    callback: {\n      type: Function,\n      \"default\": function () {}\n    },\n    \"catch\": {\n      type: Function,\n      \"default\": function () {}\n    },\n    \"finally\": {\n      type: Function,\n      \"default\": function () {}\n    },\n    parseConfig: {\n      type: Object,\n      \"default\": function () {\n        return {};\n      }\n    },\n    headers: {\n      \"default\": null\n    },\n    loadBtnText: {\n      type: String,\n      \"default\": \"Next\"\n    },\n    submitBtnText: {\n      type: String,\n      \"default\": \"Submit\"\n    },\n    tableClass: {\n      type: String,\n      \"default\": \"table\"\n    },\n    checkboxClass: {\n      type: String,\n      \"default\": \"form-check-input\"\n    },\n    buttonClass: {\n      type: String,\n      \"default\": \"btn btn-primary\"\n    },\n    inputClass: {\n      type: String,\n      \"default\": \"form-control-file\"\n    }\n  },\n  data: function () {\n    return {\n      form: {\n        csv: null\n      },\n      fieldsToMap: [],\n      map: {},\n      hasHeaders: true,\n      csv: null,\n      sample: null\n    };\n  },\n  created: function () {\n    this.hasHeaders = this.headers;\n\n    if (_.isArray(this.mapFields)) {\n      this.fieldsToMap = _.map(this.mapFields, function (item) {\n        return {\n          key: item,\n          label: item\n        };\n      });\n    } else {\n      this.fieldsToMap = _.map(this.mapFields, function (label, key) {\n        return {\n          key: key,\n          label: label\n        };\n      });\n    }\n  },\n  methods: {\n    submit: function () {\n      var _this = this;\n\n      this.form.csv = this.buildMappedCsv();\n      this.$emit('input', this.form.csv);\n\n      if (this.url) {\n        axios.post(this.url, this.form).then(function (response) {\n          _this.callback(response);\n        }).catch(function (response) {\n          _this.catch(response);\n        }).finally(function (response) {\n          _this.finally(response);\n        });\n      } else {\n        _this.callback(this.form.csv);\n      }\n    },\n    buildMappedCsv: function () {\n      var _this = this;\n\n      var csv = this.hasHeaders ? _.drop(this.csv) : this.csv;\n      return _.map(csv, function (row) {\n        var newRow = {};\n\n        _.forEach(_this.map, function (column, field) {\n          _.set(newRow, field, _.get(row, column));\n        });\n\n        return newRow;\n      });\n    },\n    load: function () {\n      var _this = this;\n\n      this.readFile(function (output) {\n        _this.sample = _.get(Papa.parse(output, {\n          preview: 2,\n          skipEmptyLines: true\n        }), \"data\");\n        _this.csv = _.get(Papa.parse(output, {\n          skipEmptyLines: true\n        }), \"data\");\n      });\n    },\n    readFile: function (callback) {\n      var file = this.$refs.csv.files[0];\n\n      if (file) {\n        var reader = new FileReader();\n        reader.readAsText(file, \"UTF-8\");\n\n        reader.onload = function (evt) {\n          callback(evt.target.result);\n        };\n\n        reader.onerror = function () {};\n      }\n    },\n    toggleHasHeaders: function () {\n      this.hasHeaders = !this.hasHeaders;\n    }\n  },\n  watch: {\n    map: {\n      handler: function (newVal) {\n        if (!this.url) {\n          var hasAllKeys = this.mapFields.every(function (item) {\n            return newVal.hasOwnProperty(item);\n          });\n\n          if (hasAllKeys) {\n            this.submit();\n          }\n        }\n      },\n      deep: true\n    }\n  },\n  computed: {\n    firstRow: function () {\n      return _.get(this, \"sample.0\");\n    }\n  }\n});","map":{"version":3,"sources":["/Users/thaysrodrigues/Desktop/projetoFinal9/node_modules/vue-csv-import/demo/components/VueCsvImport.vue"],"names":["_","module","link","v","axios","Papa","exportDefault","props","value","Array","url","type","String","mapFields","required","callback","Function","parseConfig","Object","headers","loadBtnText","submitBtnText","tableClass","checkboxClass","buttonClass","inputClass","data","form","csv","fieldsToMap","map","hasHeaders","sample","created","isArray","item","key","label","methods","submit","_this","buildMappedCsv","$emit","post","then","response","catch","finally","drop","row","newRow","forEach","column","field","set","get","load","readFile","output","parse","preview","skipEmptyLines","file","$refs","files","reader","FileReader","readAsText","onload","evt","target","result","onerror","toggleHasHeaders","watch","handler","newVal","hasAllKeys","every","hasOwnProperty","deep","computed","firstRow"],"mappings":"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","sourcesContent":["\nimport _ from 'lodash';\nimport axios from 'axios';\nimport Papa from 'papaparse';\n\nexport default {\n    props: {\n        value: Array,\n        url: {\n            type: String\n        },\n        mapFields: {\n            required: true\n        },\n        callback: {\n            type: Function,\n            default: () => {\n            }\n        },\n        catch: {\n            type: Function,\n            default: () => {\n            }\n        },\n        finally: {\n            type: Function,\n            default: () => {\n            }\n        },\n        parseConfig: {\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n        headers: {\n            default: null\n        },\n        loadBtnText: {\n            type: String,\n            default: \"Next\"\n        },\n        submitBtnText: {\n            type: String,\n            default: \"Submit\"\n        },\n        tableClass: {\n            type: String,\n            default: \"table\"\n        },\n        checkboxClass: {\n            type: String,\n            default: \"form-check-input\"\n        },\n        buttonClass: {\n            type: String,\n            default: \"btn btn-primary\"\n        },\n        inputClass: {\n            type: String,\n            default: \"form-control-file\"\n        }\n    },\n\n    data: () => ({\n        form: {\n            csv: null,\n        },\n        fieldsToMap: [],\n        map: {},\n        hasHeaders: true,\n        csv: null,\n        sample: null,\n    }),\n\n    created() {\n        this.hasHeaders = this.headers;\n\n        if (_.isArray(this.mapFields)) {\n            this.fieldsToMap = _.map(this.mapFields, (item) => {\n                return {\n                    key: item,\n                    label: item\n                };\n            });\n        } else {\n            this.fieldsToMap = _.map(this.mapFields, (label, key) => {\n                return {\n                    key: key,\n                    label: label\n                };\n            });\n        }\n    },\n\n    methods: {\n        submit() {\n            const _this = this;\n            this.form.csv = this.buildMappedCsv();\n            this.$emit('input', this.form.csv);\n\n            if (this.url) {\n                axios.post(this.url, this.form).then(response => {\n                    _this.callback(response);\n                }).catch(response => {\n                    _this.catch(response);\n                }).finally(response => {\n                    _this.finally(response);\n                });\n            } else {\n                _this.callback(this.form.csv);\n            }\n        },\n        buildMappedCsv() {\n            const _this = this;\n\n            let csv = this.hasHeaders ? _.drop(this.csv) : this.csv;\n\n            return _.map(csv, (row) => {\n                let newRow = {};\n\n                _.forEach(_this.map, (column, field) => {\n                    _.set(newRow, field, _.get(row, column));\n                });\n\n                return newRow;\n            });\n        },\n        load() {\n            const _this = this;\n\n            this.readFile((output) => {\n                _this.sample = _.get(Papa.parse(output, { preview: 2, skipEmptyLines: true }), \"data\");\n                _this.csv = _.get(Papa.parse(output, { skipEmptyLines: true }), \"data\");\n            });\n        },\n        readFile(callback) {\n            let file = this.$refs.csv.files[0];\n\n            if (file) {\n                let reader = new FileReader();\n                reader.readAsText(file, \"UTF-8\");\n                reader.onload = function (evt) {\n                    callback(evt.target.result);\n                };\n                reader.onerror = function () {\n                };\n            }\n        },\n        toggleHasHeaders() {\n            this.hasHeaders = !this.hasHeaders;\n        }\n    },\n    watch: {\n        map: {\n            handler: function (newVal) {\n                if (!this.url) {\n                    var hasAllKeys = this.mapFields.every(function (item) {\n                        return newVal.hasOwnProperty(item);\n                    });\n\n                    if (hasAllKeys) {\n                        this.submit();\n                    }\n                }\n            },\n            deep: true\n        }\n    },\n    computed: {\n        firstRow() {\n            return _.get(this, \"sample.0\");\n        }\n    },\n};\n"]},"sourceType":"module","hash":"6f7b5ac689d9d8abb7c5b96f634f5315ad581b0c"}
