{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/augusto/Desktop/projetoFinal9.4/projetoFinal9.4/imports/ui/pso.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/home/augusto/Desktop/projetoFinal9.4/projetoFinal9.4/imports/ui/pso.vue","filename":"/home/augusto/Desktop/projetoFinal9.4/projetoFinal9.4/imports/ui/pso.vue","passPerPreset":false,"envName":"development","cwd":"/home/augusto/Desktop/projetoFinal9.4/projetoFinal9.4","root":"/home/augusto/Desktop/projetoFinal9.4/projetoFinal9.4","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/augusto/Desktop/projetoFinal9.4/projetoFinal9.4/imports/ui/pso.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/augusto/Desktop/projetoFinal9.4/projetoFinal9.4/imports/ui/pso.vue"}},"code":"var PSO;\nmodule.link(\"./pso.js\", {\n  PSO: function (v) {\n    PSO = v;\n  }\n}, 0);\nvar math;\nmodule.link(\"mathjs\", {\n  \"default\": function (v) {\n    math = v;\n  }\n}, 1);\nvar sphere, levi, ackley, alpine, ellipsoid, griewank, rastrigin, rosenbrock;\nmodule.link(\"../../lib/sapso/multdim/multidim_functions.js\", {\n  sphere: function (v) {\n    sphere = v;\n  },\n  levi: function (v) {\n    levi = v;\n  },\n  ackley: function (v) {\n    ackley = v;\n  },\n  alpine: function (v) {\n    alpine = v;\n  },\n  ellipsoid: function (v) {\n    ellipsoid = v;\n  },\n  griewank: function (v) {\n    griewank = v;\n  },\n  rastrigin: function (v) {\n    rastrigin = v;\n  },\n  rosenbrock: function (v) {\n    rosenbrock = v;\n  }\n}, 2);\nvar debi, himmelblau, impossible, levi13, schaffer2, schaffer4, schwefel;\nmodule.link(\"../../lib/sapso/twodim/twodim_functions.js\", {\n  debi: function (v) {\n    debi = v;\n  },\n  himmelblau: function (v) {\n    himmelblau = v;\n  },\n  impossible: function (v) {\n    impossible = v;\n  },\n  levi13: function (v) {\n    levi13 = v;\n  },\n  schaffer2: function (v) {\n    schaffer2 = v;\n  },\n  schaffer4: function (v) {\n    schaffer4 = v;\n  },\n  schwefel: function (v) {\n    schwefel = v;\n  }\n}, 3);\nmodule.exportDefault({\n  data: function () {\n    return {\n      value: ' ',\n      number: '',\n      number2: '',\n      selected: '',\n      th: '',\n      dim1: '',\n      func: '',\n      maxIter: '',\n      stopc1: '',\n      npart1: '',\n      grafico: '',\n      myUrl: '#',\n      myFilename: '',\n      show: false,\n      csv1: [{\n        DIM: '10',\n        NPART: '20',\n        MAXITER: '30',\n        STOPC: '1e-12'\n      }]\n    };\n  },\n  methods: {\n    downloadCSV: function () {\n      var csv1 = \"\\uFEFF\" + 'DIM,NPART,MAXITER,STOPC\\n';\n      this.csv1.forEach(function (el) {\n        var line = el['DIM'] + ',' + el['NPART'] + ',' + el['MAXITER'] + ',' + el['STOPC'] + '\\n';\n        csv1 += line;\n      });\n      var blob = new Blob([csv1], {\n        \"type\": \"csv/plain\"\n      });\n      var link = document.createElement('a');\n      link.href = window.URL.createObjectURL(blob);\n      link.download = 'sampleCsv.csv';\n      link.click();\n    },\n    onChange: function (event, th) {\n      evento = event.target.value;\n\n      switch (evento) {\n        case 'Sphere':\n          this.th = sphere;\n          console.log(this.th);\n          break;\n\n        case 'Levi':\n          this.th = levi;\n          console.log(this.th);\n          break;\n\n        case 'Ackley':\n          this.th = ackley;\n          console.log(this.th);\n          break;\n\n        case 'Alpine':\n          this.th = alpine;\n          console.log(this.th);\n          break;\n\n        case 'Ellipsoid':\n          this.th = ellipsoid;\n          console.log(this.th);\n          break;\n\n        case 'Griewank':\n          this.th = griewank;\n          console.log(this.th);\n          break;\n\n        case 'Rastrigin':\n          this.th = rastrigin;\n          console.log(this.th);\n          break;\n\n        case 'Rosenbrock':\n          this.th = rosenbrock;\n          console.log(this.th);\n          break;\n\n        case 'Debi':\n          this.th = debi;\n          console.log(this.th);\n          break;\n\n        case 'Himmelblau':\n          this.th = himmelblau;\n          console.log(this.th);\n          break;\n\n        case 'Impossible':\n          this.th = impossible;\n          console.log(this.th);\n          break;\n\n        case 'Levi13':\n          this.th = levi13;\n          console.log(this.th);\n          break;\n\n        case 'Schaffer2':\n          this.th = schaffer2;\n          console.log(this.th);\n          break;\n\n        case 'Schaffer4':\n          this.th = schaffer4;\n          console.log(this.th);\n          break;\n\n        case 'Schwefel':\n          this.th = schwefel;\n          console.log(this.th);\n          break;\n\n        default:\n          console.log(\"Selecione uma função válida!\");\n      }\n    },\n    send: function () {\n      console.log(this.checkedNames.toString());\n    },\n    ligaGrafico: function () {\n      // Get the checkbox\n      var checkBox = document.getElementById(\"myCheck\"); // If the checkbox is checked, display the output text\n\n      if (checkBox.checked == true) {\n        this.grafico = 1;\n      } else {\n        this.grafico = 0;\n      }\n    },\n    processFile: function () {\n      // funcão que lê arquivo do usuário\n      var file = document.querySelector('#myFile').files[0];\n      var reader = new FileReader();\n      reader.readAsText(file); //Ao carregar o arquivo\n\n      reader.onload = function (event) {\n        //pega o arquivo\n        var csv = event.target.result; // criando vetor de resultado final e contador\n\n        var result = [];\n        var cont = 0; //divide e bota as linhas em um array\n\n        var rows = csv.split('\\n'); //varre linha por linha\n\n        for (var i = 1; i < rows.length; i++) {\n          //split by separator (,) and get the columns\n          cols = rows[i].split(','); //varre coluna por coluna\n\n          for (var j = 0; j < cols.length; j++) {\n            // trata dos resultados\n            result[cont] = parseFloat(cols[j]);\n            cont++;\n          }\n        }\n\n        document.getElementById(\"DIM\").value = result[0];\n        localStorage.dim1 = result[0];\n        document.getElementById(\"NPART\").value = result[1];\n        localStorage.npart1 = result[1];\n        document.getElementById(\"MAXITER\").value = result[2];\n        localStorage.maxIter = result[2];\n        document.getElementById(\"STOPC\").value = result[3];\n        localStorage.stopc1 = result[3]; //document.getElementById(\"DOM1\").value =result[6];\n        //localStorage.dom1 = result[4];\n        //\n        //document.getElementById(\"DOM2\").value =result[7];\n        //localStorage.dom2 = result[5];\n\n        console.log(\"Upload Arquivo\");\n        console.log(\"NPART\", localStorage.npart1);\n        console.log(\"DIM\", localStorage.dim1);\n        console.log(\"MAXITER\", localStorage.maxIter);\n        console.log(\"STOPC: \", localStorage.stopc1);\n      };\n    },\n    pso1: function (th, dim1, maxIter) {\n      // Limpando gŕaficos              \n      Plotly.purge(graph);\n      Plotly.purge(myDiv);\n      Plotly.purge(myDiv1);\n      Plotly.purge(myDiv11);\n      Plotly.purge(myDiv12);\n      Plotly.purge(myDiv13);\n      Plotly.purge(myDiv14);\n      Plotly.purge(myDiv15); //Condicional para determinar qual entrada de arquivo está sendo utilizada. Manual ou por upload de csv.    \n\n      if (localStorage.dim1) {\n        var DIM = parseInt(localStorage.dim1);\n        console.log(\"upload\");\n      } else {\n        var DIM = parseInt(this.dim1); // number of dimensions\n\n        console.log(\"manual\");\n      }\n\n      if (localStorage.npart1) {\n        var NPART = parseInt(localStorage.npart1);\n      } else {\n        var NPART = parseInt(this.npart1); // number of particles                        \n      }\n\n      if (localStorage.maxIter) {\n        var MAXITER = parseInt(localStorage.maxIter);\n      } else {\n        var MAXITER = parseInt(this.maxIter); // max number of iterations                          \n      }\n\n      if (localStorage.evalMax) {\n        var CMAX = parseInt(localStorage.evalMax);\n      } else {\n        var CMAX = parseInt(this.evalMax); //consecutive evaluations                          \n      }\n\n      if (localStorage.iwmin) {\n        var IWMIN = parseFloat(localStorage.iwmin);\n      } else {\n        var IWMIN = parseFloat(this.iwmin);\n      }\n\n      if (localStorage.iwmax) {\n        var IWMAX = parseFloat(localStorage.iwmax);\n      } else {\n        var IWMAX = parseFloat(this.iwmax);\n      }\n\n      if (localStorage.dom1) {\n        var RANGE = [parseFloat(localStorage.dom1), parseFloat(localStorage.dom2)];\n      } else {\n        var RANGE = [parseFloat(this.dom1), parseFloat(this.dom2)];\n      }\n\n      if (localStorage.stopc1) {\n        var STOPC = parseFloat(localStorage.stopc1);\n      } else {\n        var STOPC = parseFloat(this.stopc1);\n      }\n\n      if (localStorage.DIR) {\n        var dir = parseFloat(localStorage.DIR);\n      } else {\n        var dir = parseFloat(this.DIR);\n      }\n\n      if (DIM) {} else {\n        return window.alert(\"Erro, arquivo não encontrado Faça o Upload do Arquivo.\");\n      }\n\n      var fits1 = []; //variável para guardar melhores fitness\n\n      var fits2 = [];\n      var fits3 = [];\n      var fits4 = [];\n      var fits5 = [];\n      var media1 = []; // variável para guardar a média de todos no XFIT\n\n      var media2 = [];\n      var media3 = [];\n      var media4 = [];\n      var media5 = [];\n      var ultimoXfit1 = 0; // variáeis para guardar o ultimo xfit\n\n      var ultimoXfit2 = 0;\n      var ultimoXfit3 = 0;\n      var ultimoXfit4 = 0;\n      var ultimoXfit5 = 0;\n      var ultimox1 = []; //variável para guardar o ultimo x\n\n      var ultimox2 = [];\n      var ultimox3 = [];\n      var ultimox4 = [];\n      var ultimox5 = [];\n      var cont = 0; // contador de iterações\n\n      var gra = this.grafico;\n      var repet = 0;\n\n      if (gra == 1) {\n        repet = 5;\n      } else {\n        repet = 1;\n      }\n\n      if (gra == 0) {\n        // variáveis gráfico (inicio)\n        var trace = {\n          x: math.zeros(NPART)._data,\n          y: math.zeros(NPART)._data,\n          mode: 'markers',\n          type: 'scatter'\n        };\n        var trace1 = {\n          x: math.zeros(NPART)._data,\n          y: math.zeros(NPART)._data,\n          mode: 'markers',\n          type: 'scatter'\n        };\n        var data = [trace1];\n        var layout = {\n          title: 'Andamento dos dados'\n        };\n        Plotly.newPlot('graph', data, layout); // variáveis gráfico (fim)\n      }\n\n      for (var t = 0; t < repet; t++) {\n        var pso = new PSO({\n          npart: NPART,\n          dim: DIM,\n          stopc: STOPC,\n          maxIter: MAXITER,\n          func: this.th // determina a função a ser utilizada           \n\n        });\n        var maxIteration = pso.maxIter;\n        var iterations = maxIteration;\n\n        for (var k = 0; k < iterations; k++) {\n          // interrompe a execução após número máximo de iterações.              \n          var pontosx = math.zeros(pso.npart)._data;\n\n          var pontosy = math.zeros(pso.npart)._data;\n\n          for (var j2 = 0; j2 < pso.npart; j2++) {\n            pontosx[j2] = pso.posicoes[j2][0];\n            pontosy[j2] = pso.posicoes[j2][1];\n          } //SEPARANDO 5 MELHORES XFITS e A MÉDIA DE TODOS\n\n\n          var auxXFIT = pso.partMelhorFit; // p.XFIT original; p.X1 não funciona; \n\n          math.sort(auxXFIT);\n          var len = auxXFIT.length;\n\n          if (gra == 1) {\n            if (t == 0) {\n              fits1.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              media1.push(math.mean(auxXFIT));\n              ultimoXfit1 = pso.partMelhorFit[pso.melhorParticula];\n              ultimox1 = pso.partMelhorPos[pso.melhorParticula];\n            }\n\n            if (t == 1) {\n              fits2.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              media2.push(math.mean(auxXFIT));\n              ultimoXfit2 = pso.partMelhorFit[pso.melhorParticula];\n              ultimox2 = pso.partMelhorPos[pso.melhorParticula];\n            }\n\n            if (t == 2) {\n              fits3.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              media3.push(math.mean(auxXFIT));\n              ultimoXfit3 = pso.partMelhorFit[pso.melhorParticula];\n              ultimox3 = pso.partMelhorPos[pso.melhorParticula];\n            }\n\n            if (t == 3) {\n              fits4.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              media4.push(math.mean(auxXFIT));\n              ultimoXfit4 = pso.partMelhorFit[pso.melhorParticula];\n              ultimox4 = pso.partMelhorPos[pso.melhorParticula];\n            }\n\n            if (t == 4) {\n              fits5.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4]) / 5);\n              media5.push(math.mean(auxXFIT));\n              ultimoXfit5 = pso.partMelhorFit[pso.melhorParticula];\n              ultimox5 = pso.partMelhorPos[pso.melhorParticula];\n            }\n          } //imprimindo gráfico (inicio)\n\n\n          if (gra == 0) {\n            Plotly.animate('graph', {\n              data: [{\n                x: pontosx,\n                y: pontosy\n              }],\n              traces: [0],\n              layout: {}\n            }, {\n              transition: {\n                duration: 500,\n                easing: 'cubic-in-out'\n              },\n              frame: {\n                duration: 500\n              }\n            });\n          }\n\n          cont = cont + 1;\n          console.log(cont); //imprimindo gráfico (fim)               \n          //setTimeout(proximoPasso, 200); \n\n          pso.passo();\n        } //console.log(\"esse\", fits1, \"length\", fits1[0])  // fits1 não guarda array. guarda o trolotinho                                                                \n\n      }\n\n      if (gra == 1) {\n        //imprime gráficos 5 melhores\n        var indices = [];\n        var indices2 = [];\n        var fits = []; // variável XFITS Melhores\n\n        var maiorfits = fits1.length;\n\n        for (var b = 0; b < maiorfits; b++) {\n          fits.push(1 / ((fits1[b] + fits2[b] + fits3[b] + fits4[b] + fits5[b]) / 5));\n        }\n\n        var medias = []; // variável das Médias \n\n        for (var b = 0; b < maiorfits; b++) {\n          medias.push(1 / ((media1[b] + media2[b] + media3[b] + media4[b] + media5[b]) / 5));\n        }\n        /*\n        var ifits = [] // variável XFITS Piores\n        for(var b = 0; b < maiorfits; b++){  \n            ifits.push(1/((ifits1[b] + ifits2[b] + ifits3[b] + ifits4[b]+ ifits5[b])/5))\n        }\n        */\n        // Indices para gráficos para inverso\n\n\n        var fits11 = [];\n\n        for (var b = 0; b < fits.length; b++) {\n          fits11.push(1 / fits1[b]);\n        }\n\n        var fits12 = [];\n\n        for (var b = 0; b < fits.length; b++) {\n          fits12.push(1 / fits2[b]);\n        }\n\n        var fits13 = [];\n\n        for (var b = 0; b < fits.length; b++) {\n          fits13.push(1 / fits3[b]);\n        }\n\n        var fits14 = [];\n\n        for (var b = 0; b < fits.length; b++) {\n          fits14.push(1 / fits4[b]);\n        }\n\n        var fits15 = [];\n\n        for (var b = 0; b < fits.length; b++) {\n          fits15.push(1 / fits5[b]);\n        }\n\n        for (var b = 0; b < fits.length; b++) {\n          indices.push(b);\n        }\n\n        indices2 = indices;\n\n        for (var b = 0; b < fits.length; b++) {\n          indices2.push(fits.length - b - 1);\n        }\n\n        var desvmed = math.std(fits); // definindo desvio padrão\n\n        var difup = []; // diferença entre médias e desvios padrões para cima\n\n        for (var b = 0; b < maiorfits; b++) {\n          difup.push(fits[b] + desvmed);\n        }\n\n        var difdown = []; // diferença entre médias e desvios padrões para baixo\n\n        for (var b = 0; b < maiorfits; b++) {\n          difdown.push(fits[b] - desvmed);\n        }\n\n        var diftotal = []; // junção das diferenças up e down\n\n        for (var b = 0; b < maiorfits; b++) {\n          difup.push(difdown[difdown.length - b - 1]);\n        }\n\n        diftotal = difup;\n        var trace1 = {\n          //grafico maiores valores\n          x: indices,\n          y: fits,\n          name: \"Maiores Valores\",\n          mode: 'scatter'\n        };\n        var trace11 = {\n          //grafico maiores valores\n          x: indices,\n          y: fits11,\n          name: \"Maiores Execução 1\",\n          mode: 'scatter'\n        };\n        var trace12 = {\n          //grafico maiores valores\n          x: indices,\n          y: fits12,\n          name: \"Maiores Execução 2\",\n          mode: 'scatter'\n        };\n        var trace13 = {\n          //grafico maiores valores\n          x: indices,\n          y: fits13,\n          name: \"Maiores Execução 3\",\n          mode: 'scatter'\n        };\n        var trace14 = {\n          //grafico maiores valores\n          x: indices,\n          y: fits14,\n          name: \"Maiores Execução 4\",\n          mode: 'scatter'\n        };\n        var trace15 = {\n          //grafico maiores valores\n          x: indices,\n          y: fits15,\n          name: \"Maiores Execução 5\",\n          mode: 'scatter'\n        };\n        /*\n        var trace2 = { // grafico medias\n          x: indices, \n          y: medias,\n          name: \"Médias\",\n          mode: 'scatter'\n        };\n                        var trace3 = { // grafico menores valores\n          x: indices, \n          y: ifits,\n          name: \"Menores Valores\",  \n          mode: 'scatter'\n        };\n        */\n\n        var trace4 = {\n          // grafico desvio padrao\n          x: indices,\n          y: diftotal,\n          fill: \"tozerox\",\n          fillcolor: \"rgba(0,100,80,0.2)\",\n          line: {\n            color: \"transparent\"\n          },\n          name: \"Desvio Padrão\",\n          showlegend: true,\n          type: \"scatter\"\n        };\n        var data2 = [trace1];\n        var data3 = [trace1, trace4];\n        var data11 = [trace11];\n        var data12 = [trace12];\n        var data13 = [trace13];\n        var data14 = [trace14];\n        var data15 = [trace15];\n        var layout = {\n          title: 'Média 5 maiores de cada execução(Média de 5 execuções)'\n        };\n        var layout2 = {\n          title: 'Maior com Desvio Padrão'\n        };\n        var layout11 = {\n          title: '1ª Execução (Média 5 maiores fits)'\n        };\n        var layout12 = {\n          title: '2ª Execução (Média 5 maiores fits)'\n        };\n        var layout13 = {\n          title: '3ª Execução (Média 5 maiores fits)'\n        };\n        var layout14 = {\n          title: '4ª Execução (Média 5 maiores fits)'\n        };\n        var layout15 = {\n          title: '5ª Execução (Média 5 maiores fits)'\n        }; //imprimindo graficos\n\n        Plotly.newPlot('myDiv', data2, layout);\n        Plotly.newPlot('myDiv1', data3, layout2);\n        Plotly.newPlot('myDiv11', data11, layout11);\n        Plotly.newPlot('myDiv12', data12, layout12);\n        Plotly.newPlot('myDiv13', data13, layout13);\n        Plotly.newPlot('myDiv14', data14, layout14);\n        Plotly.newPlot('myDiv15', data15, layout15); //gravando arquivo csv\n\n        var produtos = [{\n          Execucao: '01',\n          MelhorFitness: fits1[0],\n          Media5melhoresFitness: (fits1[0] + fits1[1] + fits1[2] + fits1[3] + fits1[4]) / 5,\n          UltimoXFIT: ultimoXfit1,\n          UltimaPosicao: ultimox1\n        }, {\n          Execucao: '02',\n          MelhorFitness: fits2[0],\n          Media5melhoresFitness: (fits2[0] + fits2[1] + fits2[2] + fits2[3] + fits2[4]) / 5,\n          UltimoXFIT: ultimoXfit2,\n          UltimaPosicao: ultimox2\n        }, {\n          Execucao: '03',\n          MelhorFitness: fits3[0],\n          Media5melhoresFitness: (fits3[0] + fits3[1] + fits3[2] + fits3[3] + fits3[4]) / 5,\n          UltimoXFIT: ultimoXfit3,\n          UltimaPosicao: ultimox3\n        }, {\n          Execucao: '04',\n          MelhorFitness: fits4[0],\n          Media5melhoresFitness: (fits4[0] + fits4[1] + fits4[2] + fits4[3] + fits4[4]) / 5,\n          UltimoXFIT: ultimoXfit4,\n          UltimaPosicao: ultimox4\n        }, {\n          Execucao: '05',\n          MelhorFitness: fits5[0],\n          Media5melhoresFitness: (fits5[0] + fits5[1] + fits5[2] + fits5[3] + fits5[4]) / 5,\n          UltimoXFIT: ultimoXfit5,\n          UltimaPosicao: ultimox5\n        }];\n        var csv = 'Execucao, Melhor Fitness, Media 5 melhores Fitness, Ultimo XFIT, Ultima Posição X\\n';\n        produtos.forEach(function (row) {\n          csv += row.Execucao;\n          csv += ',' + row.MelhorFitness;\n          csv += ',' + row.Media5melhoresFitness;\n          csv += ',' + row.UltimoXFIT;\n          csv += ',' + row.UltimaPosicao;\n          csv += '\\n';\n        });\n        var jsonData = encodeURIComponent('{\"is_valid\": true}'); //this.myUrl = `data:text/plain;charset=utf-8,${jsonData}`\n\n        this.myUrl = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n        this.myFilename = 'results.csv';\n      }\n      /*            \n       \n      var indices = []\n          for(var b = 0; b < fits1.length; b++){\n                          indices.push(b)\n                      }                  \n          var trace11 = { //grafico maiores valores\n                        x: indices, \n                        y: fits1, \n                        name: \"Maiores Execução 1\",\n                        mode: 'scatter'\n                      };\n          var data11 = [ trace11 ];\n          var layout11 = {\n                         title:'1ª Execução (Média 5 maiores fits)'\n                      };\n          Plotly.newPlot('myDiv11', data11, layout11);\n      */\n      //reiniciando variáveis para uso de dados em inserção manual ou por upload de arquivo csv\n\n\n      localStorage.dim1 = ''; // number of dimensions \n\n      localStorage.npart1 = ''; // number of particles       \n\n      localStorage.maxIter = ''; // max number of iterations    \n\n      localStorage.stopc1 = ''; // consecutive evaluations  \n\n      this.dim1 = '';\n      this.npart1 = '';\n      this.maxIter = '';\n      this.stopc1 = '';\n    }\n  }\n});","map":{"version":3,"sources":["/home/augusto/Desktop/projetoFinal9.4/projetoFinal9.4/imports/ui/pso.vue"],"names":["PSO","module","link","v","math","sphere","levi","ackley","alpine","ellipsoid","griewank","rastrigin","rosenbrock","debi","himmelblau","impossible","levi13","schaffer2","schaffer4","schwefel","exportDefault","data","value","number","number2","selected","th","dim1","func","maxIter","stopc1","npart1","grafico","myUrl","myFilename","show","csv1","DIM","NPART","MAXITER","STOPC","methods","downloadCSV","forEach","el","line","blob","Blob","document","createElement","href","window","URL","createObjectURL","download","click","onChange","event","evento","target","console","log","send","checkedNames","toString","ligaGrafico","checkBox","getElementById","checked","processFile","file","querySelector","files","reader","FileReader","readAsText","onload","csv","result","cont","rows","split","i","length","cols","j","parseFloat","localStorage","pso1","Plotly","purge","graph","myDiv","myDiv1","myDiv11","myDiv12","myDiv13","myDiv14","myDiv15","parseInt","evalMax","CMAX","iwmin","IWMIN","iwmax","IWMAX","dom1","RANGE","dom2","DIR","dir","alert","fits1","fits2","fits3","fits4","fits5","media1","media2","media3","media4","media5","ultimoXfit1","ultimoXfit2","ultimoXfit3","ultimoXfit4","ultimoXfit5","ultimox1","ultimox2","ultimox3","ultimox4","ultimox5","gra","repet","trace","x","zeros","_data","y","mode","type","trace1","layout","title","newPlot","t","pso","npart","dim","stopc","maxIteration","iterations","k","pontosx","pontosy","j2","posicoes","auxXFIT","partMelhorFit","sort","len","push","mean","melhorParticula","partMelhorPos","animate","traces","transition","duration","easing","frame","passo","indices","indices2","fits","maiorfits","b","medias","fits11","fits12","fits13","fits14","fits15","desvmed","std","difup","difdown","diftotal","name","trace11","trace12","trace13","trace14","trace15","trace4","fill","fillcolor","color","showlegend","data2","data3","data11","data12","data13","data14","data15","layout2","layout11","layout12","layout13","layout14","layout15","produtos","Execucao","MelhorFitness","Media5melhoresFitness","UltimoXFIT","UltimaPosicao","row","jsonData","encodeURIComponent","encodeURI"],"mappings":"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","sourcesContent":["\nimport {PSO} from \"./pso.js\";\nimport  math from \"mathjs\";\nimport {sphere, levi, ackley, alpine, ellipsoid, griewank, rastrigin, rosenbrock} from \"../../lib/sapso/multdim/multidim_functions.js\";\nimport {debi, himmelblau, impossible, levi13, schaffer2, schaffer4, schwefel} from \"../../lib/sapso/twodim/twodim_functions.js\";\n\n\nexport default {\n  data() {\n    return {         \n      value: ' ',\n      number: '',\n      number2: '',\n            selected: '',\n            th: '',\n            dim1: '',\n            func: '',\n            maxIter: '',\n            stopc1: '',\n            npart1: '',\n            grafico:'',\n            myUrl: '#',\n            myFilename: '',\n            show: false,\n            csv1: [\n            { DIM: '10', NPART: '20', MAXITER: '30', STOPC: '1e-12' }\n        ]\n      \n    };\n  },\n  methods: {\n    downloadCSV: function(){\n            let csv1 = '\\ufeff' + 'DIM,NPART,MAXITER,STOPC\\n'\n            this.csv1.forEach(el => {\n            var line = el['DIM'] + ',' + el['NPART'] + ',' + el['MAXITER'] + ',' + el['STOPC'] + '\\n'\n            csv1 += line\n            })\n            var blob = new Blob([ csv1 ], { \"type\" : \"csv/plain\" });\n            let link = document.createElement('a')\n            link.href = window.URL.createObjectURL(blob)\n            link.download = 'sampleCsv.csv'\n            link.click()\n        },\n    onChange: function(event,th) {\n      evento = event.target.value\n\n      switch (evento) {\n              case 'Sphere':\n              this.th = sphere;\n              console.log(this.th);\n              break;\n\n              case 'Levi':\n              this.th = levi;\n              console.log(this.th);\n              break;\n\n              case 'Ackley':\n              this.th = ackley;\n              console.log(this.th);\n              break;\n\n              case 'Alpine':\n              this.th = alpine;\n              console.log(this.th);\n              break;\n\n              case 'Ellipsoid':\n              this.th = ellipsoid;\n              console.log(this.th);\n              break;\n\n              case 'Griewank':\n              this.th = griewank;\n              console.log(this.th);\n              break;\n\n              case 'Rastrigin':\n              this.th = rastrigin;\n              console.log(this.th);\n              break;\n\n              case 'Rosenbrock':\n              this.th = rosenbrock;\n              console.log(this.th);\n              break;\n\n              case 'Debi':\n              this.th = debi;\n              console.log(this.th);\n              break;\n\n              case 'Himmelblau':\n              this.th = himmelblau;\n              console.log(this.th);\n              break;\n\n              case 'Impossible':\n              this.th = impossible;\n              console.log(this.th);\n              break;\n\n              case 'Levi13':\n              this.th = levi13;\n              console.log(this.th);\n              break;\n\n              case 'Schaffer2':\n              this.th = schaffer2;\n              console.log(this.th);\n              break;\n\n              case 'Schaffer4':\n              this.th = schaffer4;\n              console.log(this.th);\n              break;\n\n              case 'Schwefel':\n              this.th = schwefel;\n              console.log(this.th);\n              break;\n\n              \n            default:\n              console.log(\"Selecione uma função válida!\");\n            }        \n    },  \n    \n        send() {\n            console.log(this.checkedNames.toString());\n        },\n\n        ligaGrafico: function(){\n              // Get the checkbox\n              var checkBox = document.getElementById(\"myCheck\");                          \n\n              // If the checkbox is checked, display the output text\n              if (checkBox.checked == true){\n                this.grafico = 1;\n              } else {\n                this.grafico = 0;\n              }\n        },\n        \n        processFile: function(){ // funcão que lê arquivo do usuário\n                var file = document.querySelector('#myFile').files[0];\n                var reader = new FileReader();\n                reader.readAsText(file);      \n\n                //Ao carregar o arquivo\n                reader.onload = function(event) {\n\n                //pega o arquivo\n                var csv = event.target.result;\n                \n                // criando vetor de resultado final e contador\n                var result = []\n                var cont = 0;\n\n                //divide e bota as linhas em um array\n                var rows = csv.split('\\n');\n\n                //varre linha por linha\n                for (var i = 1; i < rows.length; i++) {\n                  //split by separator (,) and get the columns\n                  cols = rows[i].split(',');\n\n                  //varre coluna por coluna\n                  for (var j = 0; j < cols.length; j++) {            \n                    // trata dos resultados\n                    result[cont] = parseFloat(cols[j]); \n                    cont++;\n                                                                                       \n                  }                   \n                }  \n                               \n                document.getElementById(\"DIM\").value = result[0];\n                localStorage.dim1 = result[0];  \n                                                              \n                document.getElementById(\"NPART\").value = result[1];\n                localStorage.npart1 = result[1];\n                \n                document.getElementById(\"MAXITER\").value = result[2];\n                localStorage.maxIter = result[2];\n                 \n                document.getElementById(\"STOPC\").value =result[3];\n                localStorage.stopc1 = result[3]; \n                                   \n                //document.getElementById(\"DOM1\").value =result[6];\n                //localStorage.dom1 = result[4];\n                //\n                //document.getElementById(\"DOM2\").value =result[7];\n                //localStorage.dom2 = result[5];\n                                                                                   \n                console.log(\"Upload Arquivo\")\n                console.log(\"NPART\", localStorage.npart1)\n                console.log(\"DIM\",localStorage.dim1)\n                console.log(\"MAXITER\",localStorage.maxIter)                                       \n                console.log(\"STOPC: \", localStorage.stopc1)\n                \n                                                \n          }                    \n        },\n   \n        pso1: function(th, dim1, maxIter){\n        \n            // Limpando gŕaficos              \n            Plotly.purge(graph);\n            Plotly.purge(myDiv); \n            Plotly.purge(myDiv1); \n            Plotly.purge(myDiv11);\n            Plotly.purge(myDiv12);\n            Plotly.purge(myDiv13);\n            Plotly.purge(myDiv14);\n            Plotly.purge(myDiv15);\n\n           //Condicional para determinar qual entrada de arquivo está sendo utilizada. Manual ou por upload de csv.    \n           if (localStorage.dim1){\n                var DIM = parseInt(localStorage.dim1); \n                console.log(\"upload\")         \n           }else {\n                var DIM = parseInt(this.dim1)                    // number of dimensions\n                console.log(\"manual\")                              \n           }\n\n           if (localStorage.npart1){\n                var NPART = parseInt(localStorage.npart1);\n           }else {\n                var NPART = parseInt(this.npart1)                // number of particles                        \n           }\n\n           if (localStorage.maxIter){\n                var MAXITER = parseInt(localStorage.maxIter);\n           }else {\n                var MAXITER = parseInt(this.maxIter)            // max number of iterations                          \n           }\n           if (localStorage.evalMax){\n                var CMAX = parseInt(localStorage.evalMax);\n           }else   {\n                var CMAX = parseInt(this.evalMax)               //consecutive evaluations                          \n           }\n           if (localStorage.iwmin){\n              var IWMIN = parseFloat(localStorage.iwmin);\n           }else {\n              var IWMIN = parseFloat(this.iwmin);\n           }\n           if (localStorage.iwmax){\n              var IWMAX = parseFloat(localStorage.iwmax);\n           }else {\n              var IWMAX = parseFloat(this.iwmax);\n           }\n           if (localStorage.dom1){\n              var RANGE = [parseFloat(localStorage.dom1),parseFloat(localStorage.dom2)]            \n           }else {\n              var RANGE = [parseFloat(this.dom1),parseFloat(this.dom2)]         \n           }\n           if (localStorage.stopc1){\n              var STOPC = parseFloat(localStorage.stopc1);\n           }else {\n              var STOPC = parseFloat(this.stopc1);\n           }\n           if (localStorage.DIR){\n              var dir = parseFloat(localStorage.DIR);\n           }else {\n              var dir = parseFloat(this.DIR);\n           }\n           \n            if(DIM){\n                \n            }else{\n                return window.alert(\"Erro, arquivo não encontrado Faça o Upload do Arquivo.\")\n            }\n                       \n            var fits1 = []; //variável para guardar melhores fitness\n            var fits2 = [];\n            var fits3 = [];\n            var fits4 = [];\n            var fits5 = [];\n            \n            var media1 = [] // variável para guardar a média de todos no XFIT\n            var media2 = [] \n            var media3 = [] \n            var media4 = []\n            var media5 = []\n\n            var ultimoXfit1 = 0 // variáeis para guardar o ultimo xfit\n            var ultimoXfit2 = 0\n            var ultimoXfit3 = 0\n            var ultimoXfit4 = 0\n            var ultimoXfit5 = 0\n\n            var ultimox1 = [] //variável para guardar o ultimo x\n            var ultimox2 = []\n            var ultimox3 = []\n            var ultimox4 = []\n            var ultimox5 = []\n\n            var cont = 0; // contador de iterações\n            \n\n            var gra = this.grafico;           \n            var repet = 0;\n\n            if (gra == 1){\n                repet = 5\n            }else{\n                repet = 1\n            }\n            \n            if(gra == 0){\n                   // variáveis gráfico (inicio)\n                var trace = {\n                          x: math.zeros(NPART)._data,\n                          y: math.zeros(NPART)._data,\n                          mode: 'markers',\n                          type: 'scatter'\n                        };\n                    \n                var trace1 = {\n                          x: math.zeros(NPART)._data,\n                          y: math.zeros(NPART)._data,\n                          mode: 'markers',\n                          type: 'scatter'\n                        };\n\n                var data = [trace1];\n\n                var layout = {\n                    title: 'Andamento dos dados'\n                }\n                Plotly.newPlot('graph', data, layout) \n                   // variáveis gráfico (fim)\n            }\n            \n\n            for(var t = 0;t < repet; t++ ){  \n                var pso = new PSO({\n                    npart: NPART,\n                    dim: DIM,\n                    stopc: STOPC,\n                    maxIter: MAXITER,\n                    func: this.th// determina a função a ser utilizada           \n                });\n                    \n\n                var maxIteration = pso.maxIter;\n                var iterations = maxIteration;\n                                     \n\n                for (var k = 0; k < iterations; k++){ // interrompe a execução após número máximo de iterações.              \n                   \n                    let pontosx = math.zeros(pso.npart)._data\n                    let pontosy = math.zeros(pso.npart)._data\n          \n                    for(var j2 = 0; j2 < pso.npart; j2++){\n                      pontosx[j2] = pso.posicoes[j2][0]\n                      pontosy[j2] = pso.posicoes[j2][1]               \n                    }\n                                        \n                     \n                    //SEPARANDO 5 MELHORES XFITS e A MÉDIA DE TODOS\n                        var auxXFIT = pso.partMelhorFit // p.XFIT original; p.X1 não funciona; \n                        math.sort(auxXFIT)\n                        var len = auxXFIT.length              \n                                                   \n                        if(gra == 1){\n                            if(t == 0){\n                                fits1.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)                               \n                                media1.push(math.mean(auxXFIT))\n                                ultimoXfit1 = pso.partMelhorFit[pso.melhorParticula];\n                                ultimox1 = pso.partMelhorPos[pso.melhorParticula];\n                            }\n                            if(t == 1){\n                                fits2.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)                               \n                                media2.push(math.mean(auxXFIT))\n                                ultimoXfit2 = pso.partMelhorFit[pso.melhorParticula];\n                                ultimox2 = pso.partMelhorPos[pso.melhorParticula];\n                            }\n                            if(t == 2){\n                                fits3.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)                               \n                                media3.push(math.mean(auxXFIT))\n                                ultimoXfit3 = pso.partMelhorFit[pso.melhorParticula];\n                                ultimox3 = pso.partMelhorPos[pso.melhorParticula];\n                            }\n                            if(t == 3){\n                                fits4.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)\n                                media4.push(math.mean(auxXFIT))\n                                ultimoXfit4 = pso.partMelhorFit[pso.melhorParticula];\n                                ultimox4 = pso.partMelhorPos[pso.melhorParticula];\n                            }\n                            if(t == 4){\n                                fits5.push((auxXFIT[0] + auxXFIT[1] + auxXFIT[2] + auxXFIT[3] + auxXFIT[4])/5)\n                                media5.push(math.mean(auxXFIT))\n                                ultimoXfit5 = pso.partMelhorFit[pso.melhorParticula];\n                                ultimox5 = pso.partMelhorPos[pso.melhorParticula];\n                            }\n                       }\n                      //imprimindo gráfico (inicio)\n                 \n                 \n                         if(gra == 0){   \n                             Plotly.animate('graph', {\n                               data: [{x: pontosx, \n                                       y: pontosy}],\n                                       traces: [0],\n                                       layout: {}\n                              }, {\n                               transition: {\n                                  duration: 500,\n                                  easing: 'cubic-in-out'\n                                },\n                                frame: {\n                                  duration: 500\n                                }\n                              })\n                        }\n                        cont=cont +1 \n                        console.log(cont)\n                        //imprimindo gráfico (fim)               \n                        //setTimeout(proximoPasso, 200); \n                      pso.passo();\n                     }  \n                   \n                    //console.log(\"esse\", fits1, \"length\", fits1[0])  // fits1 não guarda array. guarda o trolotinho                                                                \n                        \n            }\n            \n            \n              if(gra == 1){           \n                //imprime gráficos 5 melhores\n                \n                var indices = [] \n                var indices2 = []                      \n                var fits = [] // variável XFITS Melhores\n                var maiorfits = fits1.length;\n                \n                for(var b = 0; b < maiorfits; b++){  \n                    fits.push(1/((fits1[b] + fits2[b] + fits3[b] + fits4[b]+ fits5[b])/5))\n                }            \n\n                var medias = [] // variável das Médias \n                for(var b = 0; b < maiorfits; b++){\n                    medias.push(1/((media1[b] + media2[b] + media3[b] + media4[b]+ media5[b])/5))\n                }\n                /*\n                var ifits = [] // variável XFITS Piores\n                for(var b = 0; b < maiorfits; b++){  \n                    ifits.push(1/((ifits1[b] + ifits2[b] + ifits3[b] + ifits4[b]+ ifits5[b])/5))\n                }\n                */\n                // Indices para gráficos para inverso\n                var fits11 = []\n                for(var b = 0; b < fits.length; b++){\n                    fits11.push(1/fits1[b])\n                }\n                var fits12 = []\n                for(var b = 0; b < fits.length; b++){\n                    fits12.push(1/fits2[b])\n                }\n                var fits13 = []\n                for(var b = 0; b < fits.length; b++){\n                    fits13.push(1/fits3[b])\n                }\n                var fits14 = []\n                for(var b = 0; b < fits.length; b++){\n                    fits14.push(1/fits4[b])\n                }\n                var fits15 = []\n                for(var b = 0; b < fits.length; b++){\n                    fits15.push(1/fits5[b])\n                }\n                \n                for(var b = 0; b < fits.length; b++){\n                    indices.push(b)\n                }\n                indices2 = indices\n                for(var b = 0; b < fits.length; b++){\n                    indices2.push(fits.length-b-1)\n                }                                    \n                                                                          \n                var desvmed = math.std(fits) // definindo desvio padrão\n                \n                var difup = [] // diferença entre médias e desvios padrões para cima\n                for(var b = 0; b < maiorfits; b++){  \n                    difup.push(fits[b] + desvmed)\n                }\n\n                var difdown = [] // diferença entre médias e desvios padrões para baixo\n                for(var b = 0; b < maiorfits; b++){  \n                    difdown.push(fits[b] - desvmed)\n                }                         \n\n                var diftotal = [] // junção das diferenças up e down\n                for(var b = 0; b < maiorfits; b++){  \n                    difup.push(difdown[difdown.length - b -1])\n                }\n\n                diftotal = difup                                                         \n                var trace1 = { //grafico maiores valores\n                  x: indices, \n                  y: fits, \n                  name: \"Maiores Valores\",\n                  mode: 'scatter'\n                };\n                var trace11 = { //grafico maiores valores\n                  x: indices, \n                  y: fits11, \n                  name: \"Maiores Execução 1\",\n                  mode: 'scatter'\n                };\n                var trace12 = { //grafico maiores valores\n                  x: indices, \n                  y: fits12, \n                  name: \"Maiores Execução 2\",\n                  mode: 'scatter'\n                };\n                var trace13 = { //grafico maiores valores\n                  x: indices, \n                  y: fits13, \n                  name: \"Maiores Execução 3\",\n                  mode: 'scatter'\n                };\n                var trace14 = { //grafico maiores valores\n                  x: indices, \n                  y: fits14, \n                  name: \"Maiores Execução 4\",\n                  mode: 'scatter'\n                };\n                var trace15 = { //grafico maiores valores\n                  x: indices, \n                  y: fits15, \n                  name: \"Maiores Execução 5\",\n                  mode: 'scatter'\n                };\n                /*\n                var trace2 = { // grafico medias\n                  x: indices, \n                  y: medias,\n                  name: \"Médias\",\n                  mode: 'scatter'\n                };\n               \n                var trace3 = { // grafico menores valores\n                  x: indices, \n                  y: ifits,\n                  name: \"Menores Valores\",  \n                  mode: 'scatter'\n                };\n                */\n                var trace4 = { // grafico desvio padrao\n                  x: indices, \n                  y: diftotal, \n                  fill: \"tozerox\", \n                  fillcolor: \"rgba(0,100,80,0.2)\", \n                  line: {color: \"transparent\"}, \n                  name: \"Desvio Padrão\", \n                  showlegend: true, \n                  type: \"scatter\"\n                };\n                                        \n                var data2 = [ trace1 ];\n                var data3 = [ trace1, trace4 ];\n                var data11 = [ trace11 ];\n                var data12 = [ trace12 ];\n                var data13 = [ trace13 ];\n                var data14 = [ trace14 ];\n                var data15 = [ trace15 ];\n                var layout = {\n                  title:'Média 5 maiores de cada execução(Média de 5 execuções)'\n                };\n                \n                var layout2 = {\n                  title:'Maior com Desvio Padrão'\n                };         \n                var layout11 = {\n                   title:'1ª Execução (Média 5 maiores fits)'\n                };\n                var layout12 = {\n                   title:'2ª Execução (Média 5 maiores fits)'\n                };\n                var layout13 = {\n                   title:'3ª Execução (Média 5 maiores fits)'\n                };\n                var layout14 = {\n                   title:'4ª Execução (Média 5 maiores fits)'\n                };\n                var layout15 = {\n                   title:'5ª Execução (Média 5 maiores fits)'\n                };               \n                \n                //imprimindo graficos\n\n                Plotly.newPlot('myDiv', data2, layout);\n                Plotly.newPlot('myDiv1', data3, layout2);\n                Plotly.newPlot('myDiv11', data11, layout11);\n                Plotly.newPlot('myDiv12', data12, layout12);\n                Plotly.newPlot('myDiv13', data13, layout13);\n                Plotly.newPlot('myDiv14', data14, layout14);\n                Plotly.newPlot('myDiv15', data15, layout15);\n\n            \n                //gravando arquivo csv\n                    var produtos = [\n                    { Execucao: '01',\n                    MelhorFitness: fits1[0],\n                    Media5melhoresFitness: ((fits1[0]+fits1[1]+fits1[2]+fits1[3]+fits1[4])/5),\n                    UltimoXFIT: ultimoXfit1,\n                    UltimaPosicao: ultimox1\n                    },\n                    { Execucao: '02',\n                    MelhorFitness: fits2[0],\n                    Media5melhoresFitness: (fits2[0]+fits2[1]+fits2[2]+fits2[3]+fits2[4])/5,\n                    UltimoXFIT: ultimoXfit2,\n                    UltimaPosicao: ultimox2\n                    },\n                    { Execucao: '03',\n                    MelhorFitness: fits3[0],\n                    Media5melhoresFitness: (fits3[0]+fits3[1]+fits3[2]+fits3[3]+fits3[4])/5,\n                    UltimoXFIT: ultimoXfit3,\n                    UltimaPosicao: ultimox3\n                    },\n                    { Execucao: '04',\n                    MelhorFitness: fits4[0],\n                    Media5melhoresFitness: (fits4[0]+fits4[1]+fits4[2]+fits4[3]+fits4[4])/5,\n                    UltimoXFIT: ultimoXfit4,\n                    UltimaPosicao: ultimox4\n                    },\n                    { Execucao: '05',\n                    MelhorFitness: fits5[0],\n                    Media5melhoresFitness: (fits5[0]+fits5[1]+fits5[2]+fits5[3]+fits5[4])/5,\n                    UltimoXFIT: ultimoXfit5,\n                    UltimaPosicao: ultimox5\n                    }];\n                    \n\n                    var csv = 'Execucao, Melhor Fitness, Media 5 melhores Fitness, Ultimo XFIT, Ultima Posição X\\n';\n\n                    produtos.forEach(function(row) {\n                     csv += row.Execucao;\n                     csv += ','+ row.MelhorFitness;\n                     csv += ','+ row.Media5melhoresFitness;\n                     csv += ','+ row.UltimoXFIT;\n                     csv += ','+ row.UltimaPosicao;\n                     csv += '\\n';\n                    });       \n                    \n                    const jsonData = encodeURIComponent('{\"is_valid\": true}')\n                    //this.myUrl = `data:text/plain;charset=utf-8,${jsonData}`\n                    this.myUrl = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n                    this.myFilename = 'results.csv'              \n                \n                }         \n                \n                /*            \n                 \n                var indices = []\n                    for(var b = 0; b < fits1.length; b++){\n                                    indices.push(b)\n                                }                  \n                    var trace11 = { //grafico maiores valores\n                                  x: indices, \n                                  y: fits1, \n                                  name: \"Maiores Execução 1\",\n                                  mode: 'scatter'\n                                };\n                    var data11 = [ trace11 ];\n                    var layout11 = {\n                                   title:'1ª Execução (Média 5 maiores fits)'\n                                };\n                    Plotly.newPlot('myDiv11', data11, layout11);\n                */  \n                //reiniciando variáveis para uso de dados em inserção manual ou por upload de arquivo csv\n                localStorage.dim1 = ''                      // number of dimensions \n                localStorage.npart1 = ''                    // number of particles       \n                localStorage.maxIter = ''                  // max number of iterations    \n                localStorage.stopc1 = ''                  // consecutive evaluations  \n            \n                this.dim1 = '';\n                this.npart1 = '';\n                this.maxIter = '';\n                this.stopc1 = '';                           \n                \n             } \n  }\n};  \n"]},"sourceType":"module","hash":"809d709d1f890d36212d202856173f4d8dc16b34"}
