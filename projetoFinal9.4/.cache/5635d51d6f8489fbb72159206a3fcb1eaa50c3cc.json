{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/thaysrodrigues/Desktop/projetoFinal5/imports/ui/sapso.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/thaysrodrigues/Desktop/projetoFinal5/imports/ui/sapso.vue","filename":"/Users/thaysrodrigues/Desktop/projetoFinal5/imports/ui/sapso.vue","passPerPreset":false,"envName":"development","cwd":"/Users/thaysrodrigues/Desktop/projetoFinal5","root":"/Users/thaysrodrigues/Desktop/projetoFinal5","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/thaysrodrigues/Desktop/projetoFinal5/imports/ui/sapso.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/thaysrodrigues/Desktop/projetoFinal5/imports/ui/sapso.vue"}},"code":"var sphere;\nmodule.link(\"../../lib/sapso/multdim/sphere.js\", {\n  sphere: function (v) {\n    sphere = v;\n  }\n}, 0);\nvar getBestGlobal, getDiversity, getGradient, getRow, getVelocity, init, iniFitness, initGrad, initialization, truncGrad, truncSpace, truncVel, updateBest, updateDir, updateImportance;\nmodule.link(\"../../lib/functions.js\", {\n  getBestGlobal: function (v) {\n    getBestGlobal = v;\n  },\n  getDiversity: function (v) {\n    getDiversity = v;\n  },\n  getGradient: function (v) {\n    getGradient = v;\n  },\n  getRow: function (v) {\n    getRow = v;\n  },\n  getVelocity: function (v) {\n    getVelocity = v;\n  },\n  init: function (v) {\n    init = v;\n  },\n  iniFitness: function (v) {\n    iniFitness = v;\n  },\n  initGrad: function (v) {\n    initGrad = v;\n  },\n  initialization: function (v) {\n    initialization = v;\n  },\n  truncGrad: function (v) {\n    truncGrad = v;\n  },\n  truncSpace: function (v) {\n    truncSpace = v;\n  },\n  truncVel: function (v) {\n    truncVel = v;\n  },\n  updateBest: function (v) {\n    updateBest = v;\n  },\n  updateDir: function (v) {\n    updateDir = v;\n  },\n  updateImportance: function (v) {\n    updateImportance = v;\n  }\n}, 1);\nvar math;\nmodule.link(\"mathjs\", {\n  \"default\": function (v) {\n    math = v;\n  }\n}, 2);\nmodule.exportDefault({\n  data: function () {\n    return {\n      number: '',\n      number2: '',\n      graph: '',\n      dim: ''\n    };\n  },\n  methods: {\n    testa: function (dim, graph) {\n      var DIM = this.dim; // number of dimensions\n\n      var f = sphere; // name of the test function\n\n      var RANGE = [-47.5, 47.5]; // search domain\n      //////////// Parâmetros PSO /////////////\n\n      var NPART = 20; // number of particles\n\n      var MAXITER = 50; // max number of iterations\n\n      var STOPC = 0.0000000001; // stop criterion\n\n      var k1 = 1;\n      var CMAX = 3; //consecutive evaluations\n\n      var DT = [0.1, 0.25]; //dlow and dhigh\n\n      var dir = 1; //attraction as default\n\n      var cont = 0;\n      var IWMIN = 0.4;\n      var IWMAX = 0.7;\n      var params = {\n        'IW': IWMAX,\n        'CC': 0,\n        'SC': 4,\n        'GC': 0.1\n      };\n      var L = math.norm(math.multiply(math.ones(DIM)._data, RANGE[1] - RANGE[0])); // diagonal length of the space\n\n      var VMAX = k1 * (RANGE[1] - RANGE[0]) / 2; // maximum velocity\n\n      var iw = [];\n\n      for (var i = 0; i < MAXITER; i++) {\n        iw[i] = IWMAX - (i + 1) * (IWMAX - IWMIN) / MAXITER;\n      } // inertia weight through iterations\n      ///////////////Main iteration/////////////////\n\n\n      var p = init(NPART, DIM, RANGE, VMAX, f);\n      var G1 = getBestGlobal(p);\n      var c = 0;\n      var trace = {\n        x: math.zeros(NPART)._data,\n        y: math.zeros(NPART)._data,\n        mode: 'markers',\n        type: 'scatter'\n      };\n      var trace1 = {\n        x: math.zeros(NPART)._data,\n        y: math.zeros(NPART)._data,\n        mode: 'markers',\n        type: 'scatter'\n      };\n      var data = [trace1];\n      var layout = {\n        title: 'Andamento dos dados'\n      };\n      Plotly.newPlot('graph', data, layout);\n\n      for (var i1 = 0; i1 < MAXITER; i1++) {\n        for (var j = 0; j < NPART; j++) {\n          for (var k = 0; k < DIM; k++) {\n            p.G[j][k] = getGradient(p.X[j], f)[k];\n          }\n\n          for (var _k = 0; _k < DIM; _k++) {\n            p.G[j][_k] = truncGrad(p.G[j], VMAX)[_k]; // trunc gradient                         \n          }\n\n          for (var _k2 = 0; _k2 < DIM; _k2++) {\n            p.V[j][_k2] = getVelocity(p.X[j], p.V[j], p.P[j], p.G[j], G1, p.I[j], params, dir, DIM)[_k2];\n          }\n\n          for (var _k3 = 0; _k3 < DIM; _k3++) {\n            p.V[j][_k3] = truncVel(p.V[j], VMAX)[_k3]; // trunc velocity\n          }\n\n          p.X[j] = math.add(p.X[j], p.V[j]); //trolotinho                  \n\n          var trunc = truncSpace(p.X[j], p.I[j], p.C[j], RANGE); // I e C são matrizes, mas dependendo de truncspace eles se                          //tornam numeros\n\n          trunc1 = trunc[0];\n          p.I[j] = trunc[1];\n          p.C[j] = trunc[2];\n\n          for (var _k4 = 0; _k4 < DIM; _k4++) {\n            p.X[j][_k4] = trunc1[_k4];\n          }\n\n          p.XFIT[j] = sphere(p.X[j]);\n          var update = updateBest(p.X[j], p.XFIT[j], p.P[j], p.PFIT[j], G1);\n          p.PFIT[j] = update[1];\n          G1 = update[2];\n\n          for (var _k5 = 0; _k5 < DIM; _k5++) {\n            p.P[j][_k5] = update[0][_k5];\n          }\n        }\n\n        cont = cont + 1;\n        console.log(cont);\n        var update1 = updateImportance(p.X, p.I, p.XFIT, p.OLDXFIT, p.C, p.G, G1.X1, CMAX, NPART);\n        p.I = update1[0];\n        p.C = update1[1]; // escolha de partícula \n\n        var diversity = getDiversity(p.X, L, NPART, DIM);\n        var updateDir1 = updateDir(dir, diversity, p.I, DT, NPART);\n        dir = updateDir1[0];\n        p.I = updateDir1[1];\n\n        for (var _k6 = 0; _k6 < NPART; _k6++) {\n          p.OLDXFIT[_k6] = p.XFIT[_k6]; // igualando OLDXFIT com XFIT\n        }\n\n        params.IW = iw[i1]; //console.log('ITER: ', num2str[i], ' | G: ', num2str[G.XFIT], ' | dir: ', num2str[dir], ' | Div: ', num2str[diversity])\n\n        var pontosx = math.zeros(NPART)._data;\n\n        var pontosy = math.zeros(NPART)._data;\n\n        for (var j2 = 0; j2 < NPART; j2++) {\n          pontosx[j2] = p.X[j2][0];\n          pontosy[j2] = p.X[j2][1];\n        }\n\n        Plotly.animate('graph', {\n          data: [{\n            x: pontosx,\n            y: pontosy\n          }],\n          traces: [0],\n          layout: {}\n        }, {\n          transition: {\n            duration: 500,\n            easing: 'cubic-in-out'\n          },\n          frame: {\n            duration: 500\n          }\n        });\n        if (G1.XFIT < STOPC) break;\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/thaysrodrigues/Desktop/projetoFinal5/imports/ui/sapso.vue"],"names":["sphere","module","link","v","getBestGlobal","getDiversity","getGradient","getRow","getVelocity","init","iniFitness","initGrad","initialization","truncGrad","truncSpace","truncVel","updateBest","updateDir","updateImportance","math","exportDefault","data","number","number2","graph","dim","methods","testa","DIM","f","RANGE","NPART","MAXITER","STOPC","k1","CMAX","DT","dir","cont","IWMIN","IWMAX","params","L","norm","multiply","ones","_data","VMAX","iw","i","p","G1","c","trace","x","zeros","y","mode","type","trace1","layout","title","Plotly","newPlot","i1","j","k","G","X","V","P","I","add","trunc","C","trunc1","XFIT","update","PFIT","console","log","update1","OLDXFIT","X1","diversity","updateDir1","IW","pontosx","pontosy","j2","animate","traces","transition","duration","easing","frame"],"mappings":"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","sourcesContent":["\nimport {sphere} from \"../../lib/sapso/multdim/sphere.js\";\nimport {getBestGlobal , getDiversity, getGradient, getRow, getVelocity, init, iniFitness, initGrad, initialization, truncGrad, truncSpace, truncVel, updateBest, updateDir, updateImportance} from \"../../lib/functions.js\";\nimport  math from \"mathjs\";\n\n\texport default {\n\tdata() {\n\t\treturn {\n\t\t\tnumber: '',\n\t\t\tnumber2: '',\n\t\t\tgraph: '',\n\t\t\tdim: ''\n\t\t}\n\t},\t\t\n\t\tmethods: {\n\t\t\ttesta: function(dim,graph){\n                let DIM = this.dim                                                     // number of dimensions\n\t            let f = sphere                                              // name of the test function\n\t            let RANGE = [-47.5 , 47.5]                                       // search domain\n\t    \n\t            //////////// Parâmetros PSO /////////////\n\t             \n\t            let NPART = 20                                                   // number of particles\n\t            let MAXITER = 50                                           // max number of iterations\n\t            let STOPC = 0.0000000001                                         // stop criterion\n\t            let k1 = 1\n\t            let CMAX = 3                                                //consecutive evaluations\n\t            let DT = [0.1 , 0.25 ]                                           //dlow and dhigh\n\t            let dir = 1                                                      //attraction as default\n\n\t            let cont = 0 \n\t            let IWMIN = 0.4\n\t            let IWMAX = 0.7\n\t            let params = {\n\t\t            'IW': IWMAX,       \n\t\t            'CC': 0, \n\t\t            'SC': 4,      \n\t\t            'GC': 0.1       \n\t            }\n\t            let L = math.norm(math.multiply(math.ones(DIM)._data, (RANGE[1] - RANGE[0])))               // diagonal length of the space\n\t            let VMAX = k1 * (RANGE[1] - RANGE[0]) / 2                                              // maximum velocity\n\t             \n\t            let iw = []\n\t            for(let i = 0; i< MAXITER; i++){\n\t               iw[i] = IWMAX - (i+1) * (IWMAX - IWMIN) / MAXITER\n\t            }                                                                                 // inertia weight through iterations\n\t             \n\t            ///////////////Main iteration/////////////////\n\t            let p = init(NPART, DIM, RANGE, VMAX, f)\n\t            let G1 = getBestGlobal(p);\n\n\t            let c = 0\n\n                \n\n                var trace = {\n                      x: math.zeros(NPART)._data,\n                      y: math.zeros(NPART)._data,\n                      mode: 'markers',\n                      type: 'scatter'\n                    };\n                \n                var trace1 = {\n                      x: math.zeros(NPART)._data,\n                      y: math.zeros(NPART)._data,\n                      mode: 'markers',\n                      type: 'scatter'\n                    };\n\n                var data = [trace1];\n\n                var layout = {\n                    title: 'Andamento dos dados'\n                }\n                Plotly.newPlot('graph', data, layout)  \n                for (let i1 = 0; i1 < MAXITER; i1++){\n\t   \n\t               for (let j = 0; j < NPART; j++){               \n\t\t             \n\t\t               for(let k = 0; k < DIM; k++){\n\t\t\t               p.G[j][k] = getGradient(p.X[j], f)[k]\n\t\t\t             }\n\t\t               \n\t\t               for (let k = 0; k < DIM; k++){          \n\t\t\t               p.G[j][k] = truncGrad(p.G[j], VMAX)[k]  // trunc gradient                         \n\t\t               }   \n\t\t              \n\t\t               for (let k = 0; k < DIM; k++){         \n\t\t\t               p.V[j][k] = getVelocity(p.X[j], p.V[j], p.P[j], p.G[j], G1, p.I[j], params, dir, DIM)[k]         \n\t\t               }         \n\t\t            \n\t\t               for (let k = 0; k < DIM; k++){\n\t\t\t               p.V[j][k] = truncVel(p.V[j], VMAX)[k] // trunc velocity\n\t\t               }     \n\t\t\t             \n\t\t               p.X[j] = math.add(p.X[j] , p.V[j])    //trolotinho                  \n\t\t               \n\n\t            let trunc = truncSpace(p.X[j],p.I[j],p.C[j],RANGE)   // I e C são matrizes, mas dependendo de truncspace eles se                          //tornam numeros\n\t              trunc1 = trunc[0]\n\t              p.I[j] = trunc[1]                  \n\t              p.C[j] = trunc[2]\n\t              for (let k = 0; k < DIM; k++){\n\t\t\t             p.X[j][k] = trunc1[k]\n\t\t               }    \n\t\t              \n\t             p.XFIT[j] = sphere(p.X[j])\n\n\n\t             let update = updateBest(p.X[j], p.XFIT[j], p.P[j], p.PFIT[j], G1)   \n\t             p.PFIT[j] = update[1]\n\t             G1 = update[2]\n\t             \n\t             for (let k = 0; k < DIM; k++){         \n\t\t\t               p.P[j][k] = update[0][k]\n\t\t\t            }\n\n\t              }\n\t            cont=cont +1 \n\t            console.log(cont)\n\t            let update1 = updateImportance(p.X, p.I, p.XFIT, p.OLDXFIT, p.C, p.G, G1.X1, CMAX, NPART)\n\t            p.I = update1[0]\n\t            p.C = update1[1]\n\t            // escolha de partícula \n\t             \n\t            let diversity = getDiversity(p.X, L, NPART, DIM)\n\t             \n\t            let updateDir1 =  updateDir(dir, diversity, p.I, DT, NPART)\n\t            dir = updateDir1[0]\n\t            p.I = updateDir1[1]\n\n\t            for (let k = 0; k < NPART; k++){\n\t\t\t               p.OLDXFIT[k] = p.XFIT[k] // igualando OLDXFIT com XFIT\n\t\t               }\n\t             \n\t            params.IW = iw[i1] \n\t             \n\t            //console.log('ITER: ', num2str[i], ' | G: ', num2str[G.XFIT], ' | dir: ', num2str[dir], ' | Div: ', num2str[diversity])\n\t            \n                          \n                  let pontosx = math.zeros(NPART)._data\n                  let pontosy = math.zeros(NPART)._data\n\t              \n                  for(var j2 = 0; j2 < NPART; j2++){\n                   pontosx[j2] = p.X[j2][0]\n                   pontosy[j2] = p.X[j2][1]               \n                  }\n                  \n\n                      Plotly.animate('graph', {\n                        data: [{x: pontosx, \n                                y: pontosy}],\n                        traces: [0],\n                        layout: {}\n                      }, {\n                        transition: {\n                          duration: 500,\n                          easing: 'cubic-in-out'\n                        },\n                        frame: {\n                          duration: 500\n                        }\n                      })\n\t            if(G1.XFIT < STOPC)break                            \n\t            }\n\t\t\t\t\n\t\t\t}\n\t\t}\n    };\n\n"]},"sourceType":"module","hash":"5635d51d6f8489fbb72159206a3fcb1eaa50c3cc"}
